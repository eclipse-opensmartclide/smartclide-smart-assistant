,full_name,link,description,stars,forks,watchers,keywords,source
0,The-Complete-Practical-Certified-Ethical-Hacking-Course-in-English,https://github.com/priyankgada/The-Complete-Practical-Certified-Ethical-Hacking-Course-in-English.git,"Welcome this comprehensive course on Ethical Hacking! This course assumes you have NO prior knowledge in hacking and by the end of it you'll be able to hack systems like black-hat hackers and secure them like security experts!  This course is highly practical but it won't neglect the theory, so we'll start with ethical hacking basics and the different fields in penetration testing, installing the needed software (works on Windows, Linux and Mac OS X) and then we'll dive and start hacking systems straight away. From here onwards you'll learn everything by example, by analysing and exploiting computer systems such as networks, servers, clients, websites .....etc, so we'll never have any boring dry theoretical lectures.  The course is divided into a number of sections, each section covers a penetration testing / hacking field, in each of these sections you'll first learn how the target system works, the weaknesses of this system, and how to practically exploit theses weaknesses and hack into it, not only that but you'll also learn how to secure this system from the discussed attacks. This course will take you from a beginner to a more advanced level by the time you finish, you will have knowledge about most penetration testing fields.  The course is divided into four main sections:  1. Network Hacking - This section will teach you how to test the security of networks, both wired and wireless. First, you will learn some basic network terminology, how networks work, and how devices communicate with each other. Then it will branch into three sub sections:  Pre-connection attacks: in this subsection you'll learn what can you do before even connecting to a network, and even before having internet access; you'll start by learning how to gather information about the networks around you, discover the devices connected to them, and how to control connections around you (ie: deny/allow devices from connecting to networks) even without knowing the password of the target network.  Gaining Access: Now that you gathered information about the networks around you, in this subsection you will learn how to crack the key and get the password to your target network weather it uses WEP, WPA or even WPA2.  Post Connection attacks: Now that you have the key, you can connect to the target network, in this subsection you will learn a number of powerful techniques that allow you to gather comprehensive information about the connected devices, see anything they do on the internet (such as login information, passwords, visited urls, images, videos ....etc), redirect requests, inject evil code in loaded pages and much more! All the attacks here work against both wireless and wired networks. You will also learn how to create a fake WiFi network, attract users to connect to it and use all of the above techniques against the connected clients.  2. Gaining Access - In this section you will learn two main approaches to gain full control or hack computer systems:  Server Side Attacks: In this subsection you will learn how to gain full access to computer systems without the need for user interaction. You will learn how to gather useful information about a target computer system such as its operating system, open ports, installed services, then you'll learn how to use this information to discover weaknesses and vulnerabilitiesand exploit them to gain full control over the target. Finally you will learn how to generate different types of reports for your discoveries.  Client Side Attacks - If the target system does not contain any weaknesses then the only way to gain access to it is by interacting with the users, in this subsection you'll learn how to get the target user to install a backdoor on their system without even realising, this is done by hijacking updatesor backdoornig downloadeds on the fly. Not only that but you'll also learn how to create trojans by backdooring normal files (such as an image or a pdf) and use social engineering to deliver this trojan to the target, to do this you'll learn how to spoof emails so they appear as if they're sent from the target's friend, boss or any email account they're likely to interact with.  3. Post Exploitation - In this section you will learn how to interact with the systems you compromised so far. You’ll learn how to access the file system (read/write/upload/execute), maintain your access, spy on the target and even use the target computer as a pivot to hack other computer systems.  4. Website / Web Application Hacking - In this section you will learn how websites work, how to gather information about a target website (such as website owner, server location, used technologies ....etc) and how to discover and exploit the following dangerous vulnerabilities to hack into websites:",50,21,50,location+request+weather,GitHub
1,Altiruss,https://github.com/Altiruss/Altiruss.git,"############################################################ # +------------------------------------------------------+ # # |                       Notes                          | # # +------------------------------------------------------+ # ############################################################  # If you want to use special characters in this document, such as accented letters, you MUST save the file as UTF-8, not ANSI. # If you receive an error when Essentials loads, ensure that: #   - No tabs are present: YAML only allows spaces #   - Indents are correct: YAML hierarchy is based entirely on indentation #   - You have ""escaped"" all apostrophes in your text: If you want to write ""don't"", for example, write ""don''t"" instead (note the doubled apostrophe) #   - Text with symbols is enclosed in single or double quotation marks  # If you have problems join the Essentials help support channel: http://tiny.cc/EssentialsChat  ############################################################ # +------------------------------------------------------+ # # |                 Essentials (Global)                  | # # +------------------------------------------------------+ # ############################################################  # A color code between 0-9 or a-f. Set to 'none' to disable. ops-name-color: 'none'  # The character(s) to prefix all nicknames, so that you know they are not true usernames. nickname-prefix: '~'  # Disable this if you have any other plugin, that modifies the displayname of a user. change-displayname: true  # When this option is enabled, the (tab) player list will be updated with the displayname. # The value of change-displayname (above) has to be true. #change-playerlist: true  # When essentialschat.jar isnt used, force essentials to add the prefix and suffix from permission plugins to displayname # This setting is ignored if essentialschat.jar is used, and defaults to 'true' # The value of change-displayname (above) has to be true. # Do not edit this setting unless you know what you are doing! #add-prefix-suffix: false  # The delay, in seconds, required between /home, /tp, etc. teleport-cooldown: 5  # The delay, in seconds, before a user actually teleports.  If the user moves or gets attacked in this timeframe, the teleport never occurs. teleport-delay: 5  # The delay, in seconds, a player can't be attacked by other players after they have been teleported by a command # This will also prevent the player attacking other players teleport-invulnerability: 4  # The delay, in seconds, required between /heal attempts heal-cooldown: 60  # What to prevent from /i /give # e.g item-spawn-blacklist: 46,11,10 item-spawn-blacklist:  # Set this to true if you want permission based item spawn rules # Note: The blacklist above will be ignored then. # Permissions: #  - essentials.itemspawn.item-all #  - essentials.itemspawn.item-[itemname] #  - essentials.itemspawn.item-[itemid] #  - essentials.give.item-all #  - essentials.give.item-[itemname] #  - essentials.give.item-[itemid] # For more information, visit http://wiki.ess3.net/wiki/Command_Reference/ICheat#Item.2FGive permission-based-item-spawn: false  # Mob limit on the /spawnmob command per execution spawnmob-limit: 10  # Shall we notify users when using /lightning warn-on-smite: true  # motd and rules are now configured in the files motd.txt and rules.txt  # When a command conflicts with another plugin, by default, Essentials will try to force the OTHER plugin to take priority. # Commands in this list, will tell Essentials to 'not give up' the command to other plugins. # In this state, which plugin 'wins' appears to be almost random. #  # If you have two plugin with the same command and you wish to force Essentials to take over, you need an alias. # To force essentials to take 'god' alias 'god' to 'egod'. # See http://wiki.bukkit.org/Bukkit.yml#aliases for more information  overridden-commands: #  - god  # Disabled commands will be completely unavailable on the server. # Disabling commands here will have no effect on command conflicts. disabled-commands: #  - nick  # These commands will be shown to players with socialSpy enabled # You can add commands from other plugins you may want to track or  # remove commands that are used for something you dont want to spy on socialspy-commands:   - msg   - w   - r   - mail   - m   - t   - whisper   - emsg   - tell   - er   - reply   - ereply   - email   - action   - describe   - eme   - eaction   - edescribe   - etell   - ewhisper   - pm  # If you do not wish to use a permission system, you can define a list of 'player perms' below. # This list has no effect if you are using a supported permissions system. # If you are using an unsupported permissions system simply delete this section. # Whitelist the commands and permissions you wish to give players by default (everything else is op only). # These are the permissions without the ""essentials."" part. player-commands:   - afk   - afk.auto   - back   - back.ondeath   - balance   - balance.others   - balancetop   - build   - chat.color   - chat.format   - chat.shout   - chat.question   - clearinventory   - compass   - depth   - delhome   - getpos   - geoip.show   - help   - helpop   - home   - home.others   - ignore   - info   - itemdb   - kit   - kits.tools   - list   - mail   - mail.send   - me   - motd   - msg   - msg.color   - nick   - near   - pay   - ping   - protect   - r   - rules   - realname   - seen   - sell   - sethome   - setxmpp   - signs.create.protection   - signs.create.trade   - signs.break.protection   - signs.break.trade   - signs.use.balance   - signs.use.buy   - signs.use.disposal   - signs.use.enchant   - signs.use.free   - signs.use.gamemode   - signs.use.heal   - signs.use.info   - signs.use.kit   - signs.use.mail   - signs.use.protection   - signs.use.repair   - signs.use.sell   - signs.use.time   - signs.use.trade   - signs.use.warp   - signs.use.weather   - spawn   - suicide   - time   - tpa   - tpaccept   - tpahere   - tpdeny   - warp   - warp.list   - world   - worth   - xmpp  # Note: All items MUST be followed by a quantity! # All kit names should be lower case, and will be treated as lower in permissions/costs. # Syntax: - itemID[:DataValue/Durability] Amount [Enchantment:Level].. [itemmeta:value]... # For Item meta information visit http://wiki.ess3.net/wiki/Item_Meta # 'delay' refers to the cooldown between how often you can use each kit, measured in seconds. # For more information, visit http://wiki.ess3.net/wiki/Kits kits:   tools:     delay: 10     items:       - 272 1       - 273 1       - 274 1       - 275 1   dtools:     delay: 600     items:       - 278 1 efficiency:1 durability:1 fortune:1 name:&4Gigadrill lore:The_drill_that_&npierces|the_heavens       - 277 1 digspeed:3 name:Dwarf lore:Diggy|Diggy|Hole       - 298 1 color:255,255,255 name:Top_Hat lore:Good_day,_Good_day       - 279:780 1   notch:     delay: 6000     items:       - 397:3 1 player:Notch   color:     delay: 6000     items:       - 387 1 title:&4Book_&9o_&6Colors author:KHobbits lore:Ingame_color_codes book:Colors   firework:     delay: 6000     items:       - 401 1 name:Angry_Creeper color:red fade:green type:creeper power:1       - 401 1 name:StarryNight color:yellow,orange fade:blue type:star effect:trail,twinkle power:1       - 401 2 name:SolarWind color:yellow,orange fade:red shape:large effect:twinkle color:yellow,orange fade:red shape:ball effect:trail color:red,purple fade:pink shape:star effect:trail power:1  # Essentials Sign Control # See http://wiki.ess3.net/wiki/Sign_Tutorial for instructions on how to use these. # To enable signs, remove # symbol. To disable all signs, comment/remove each sign. # Essentials Colored sign support will be enabled when any sign types are enabled. # Color is not an actual sign, it's for enabling using color codes on signs, when the correct permissions are given.  enabledSigns:   #- color   #- balance   #- buy   #- sell   #- trade   #- free   #- disposal   #- warp   #- kit   #- mail   #- enchant   #- gamemode   #- heal   #- info   #- spawnmob   #- repair   #- time   #- weather    # How many times per second can Essentials signs be interacted with per player. # Values should be between 1-20, 20 being virtually no lag protection. # Lower numbers will reduce the possibility of lag, but may annoy players. sign-use-per-second: 4  # Backup runs a batch/bash command while saving is disabled backup:   # Interval in minutes   interval: 30   # Unless you add a valid backup command or script here, this feature will be useless.   # Use 'save-all' to simply force regular world saving without backup.   #command: 'rdiff-backup World1 backups/World1'  # Set this true to enable permission per warp. per-warp-permission: false  # Sort output of /list command by groups sort-list-by-groups: false  # More output to the console debug: false  # Set the locale for all messages # If you don't set this, the default locale of the server will be used. # For example, to set language to English, set locale to en, to use the file ""messages_en.properties"" # Don't forget to remove the # in front of the line # For more information, visit http://wiki.ess3.net/wiki/Locale #locale: en  # Turn off god mode when people exit remove-god-on-disconnect: false  # Auto-AFK # After this timeout in seconds, the user will be set as afk. # Set to -1 for no timeout. auto-afk: 300  # Auto-AFK Kick # After this timeout in seconds, the user will be kicked from the server. # Set to -1 for no timeout. auto-afk-kick: -1  # Set this to true, if you want to freeze the player, if he is afk. # Other players or monsters can't push him out of afk mode then. # This will also enable temporary god mode for the afk player. # The player has to use the command /afk to leave the afk mode. freeze-afk-players: false  # When the player is afk, should he be able to pickup items? # Enable this, when you don't want people idling in mob traps. disable-item-pickup-while-afk: false  # This setting controls if a player is marked as active on interaction. # When this setting is false, you will need to manually un-AFK using the /afk command. cancel-afk-on-interact: true  # Should we automatically remove afk status when the player moves? # Player will be removed from AFK on chat/command regardless of this setting. # Disable this to reduce server lag. cancel-afk-on-move: true  # You can disable the death messages of Minecraft here death-messages: true  # Add worlds to this list, if you want to automatically disable god mode there no-god-in-worlds: #  - world_nether  # Set to true to enable per-world permissions for teleporting between worlds with essentials commands # This applies to /world, /back, /tp[a|o][here|all], but not warps. # Give someone permission to teleport to a world with essentials.worlds.<worldname> # This does not affect the /home command, there is a separate toggle below for this. world-teleport-permissions: false  # The number of items given if the quantity parameter is left out in /item or /give. # If this number is below 1, the maximum stack size size is given. If over-sized stacks # are not enabled, any number higher than the maximum stack size results in more than one stack. default-stack-size: -1  # Over-sized stacks are stacks that ignore the normal max stack size. # They can be obtained using /give and /item, if the player has essentials.oversizedstacks permission. # How many items should be in an over-sized stack? oversized-stacksize: 64  # Allow repair of enchanted weapons and armor. # If you set this to false, you can still allow it for certain players using the permission # essentials.repair.enchanted repair-enchanted: true  # Allow 'unsafe' enchantments in kits and item spawning. # Warning: Mixing and overleveling some enchantments can cause issues with clients, servers and plugins. unsafe-enchantments: false  #Do you want essentials to keep track of previous location for /back in the teleport listener? #If you set this to true any plugin that uses teleport will have the previous location registered. register-back-in-listener: false  #Delay to wait before people can cause attack damage after logging in  login-attack-delay: 5  #Set the max fly speed, values range from 0.1 to 1.0 max-fly-speed: 0.8  #Set the maximum amount of mail that can be sent within a minute. mails-per-minute: 1000  # Set the maximum time /tempban can be used for in seconds. # Set to -1 to disable, and essentials.tempban.unlimited can be used to override. max-tempban-time: -1  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsHome                     | # # +------------------------------------------------------+ # ############################################################  # Allows people to set their bed at daytime update-bed-at-daytime: true  # Set to true to enable per-world permissions for using homes to teleport between worlds # This applies to the /home only. # Give someone permission to teleport to a world with essentials.worlds.<worldname> world-home-permissions: false  # Allow players to have multiple homes. # Players need essentials.sethome.multiple before they can have more than 1 home, defaults to 'default' below. # Define different amounts of multiple homes for different permissions, e.g. essentials.sethome.multiple.vip # People with essentials.sethome.multiple.unlimited are not limited by these numbers. # For more information, visit http://wiki.ess3.net/wiki/Multihome sethome-multiple:     default: 3   # essentials.sethome.multiple.vip   vip: 5   # essentials.sethome.multiple.staff   staff: 10  # Set timeout in seconds for players to accept tpa before request is cancelled. # Set to 0 for no timeout tpa-accept-cancellation: 120  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsEco                      | # # +------------------------------------------------------+ # ############################################################  # For more information, visit http://wiki.ess3.net/wiki/Essentials_Economy  # Defines the balance with which new players begin.  Defaults to 0. starting-balance: 0  # worth-# defines the value of an item when it is sold to the server via /sell. # These are now defined in worth.yml  # Defines the cost to use the given commands PER USE # Some commands like /repair have sub-costs, check the wiki for more information. command-costs:   # /example costs $1000 PER USE   #example: 1000   # /kit tools costs $1500 PER USE   #kit-tools: 1500  # Set this to a currency symbol you want to use. currency-symbol: '$'  # Set the maximum amount of money a player can have # The amount is always limited to 10 trillion because of the limitations of a java double max-money: 10000000000000  # Set the minimum amount of money a player can have (must be above the negative of max-money). # Setting this to 0, will disable overdrafts/loans completely.  Users need 'essentials.eco.loan' perm to go below 0. min-money: -10000  # Enable this to log all interactions with trade/buy/sell signs and sell command economy-log-enabled: false  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsHelp                     | # # +------------------------------------------------------+ # ############################################################  # Show other plugins commands in help non-ess-in-help: true  # Hide plugins which do not give a permission # You can override a true value here for a single plugin by adding a permission to a user/group. # The individual permission is: essentials.help.<plugin>, anyone with essentials.* or '*' will see all help regardless. # You can use negative permissions to remove access to just a single plugins help if the following is enabled. hide-permissionless-help: true  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsChat                     | # # +------------------------------------------------------+ # ############################################################  chat:    # If EssentialsChat is installed, this will define how far a player's voice travels, in blocks.  Set to 0 to make all chat global.   # Note that users with the ""essentials.chat.spy"" permission will hear everything, regardless of this setting.   # Users with essentials.chat.shout can override this by prefixing text with an exclamation mark (!)   # Users with essentials.chat.question can override this by prefixing text with a question mark (?)   # You can add command costs for shout/question by adding chat-shout and chat-question to the command costs section.""   radius: 0    # Chat formatting can be done in two ways, you can either define a standard format for all chat   # Or you can give a group specific chat format, to give some extra variation.   # If set to the default chat format which ""should"" be compatible with ichat.   # For more information of chat formatting, check out the wiki: http://wiki.ess3.net/wiki/Chat_Formatting      format: '&l{DISPLAYNAME} &3➽ &f&l{MESSAGE}'   Dziewczyna: '{DISPLAYNAME} &3➽ &5 {MESSAGE}'   #format: '&7[{GROUP}]&r {DISPLAYNAME}&7:&r {MESSAGE}'    group-formats:   #  Default: '{WORLDNAME} {DISPLAYNAME}&7:&r {MESSAGE}'   #  Admins: '{WORLDNAME} &c[{GROUP}]&r {DISPLAYNAME}&7:&c {MESSAGE}'    # If you are using group formats make sure to remove the '#' to allow the setting to be read.  ############################################################ # +------------------------------------------------------+ # # |                 EssentialsProtect                    | # # +------------------------------------------------------+ # ############################################################  protect:   # Database settings for sign/rail protection    # mysql or sqlite   # We strongly recommend against using mysql here, unless you have a good reason.   # Sqlite seems to be faster in almost all cases, and in some cases mysql can be much slower.   datatype: 'sqlite'    # If you specified MySQL above, you MUST enter the appropriate details here.   # If you specified SQLite above, these will be IGNORED.   username: 'root'   password: 'root'   mysqlDb: 'jdbc:mysql://localhost:3306/minecraft'    # General physics/behavior modifications   prevent:     lava-flow: false     water-flow: false     water-bucket-flow: false     fire-spread: true     lava-fire-spread: true     flint-fire: false     lightning-fire-spread: true     portal-creation: false     tnt-explosion: false     tnt-playerdamage: false     fireball-explosion: false     fireball-fire: false     fireball-playerdamage: false     witherskull-explosion: false     witherskull-playerdamage: false     wither-spawnexplosion: false     wither-blockreplace: false     creeper-explosion: false     creeper-playerdamage: false     creeper-blockdamage: false     enderdragon-blockdamage: true     enderman-pickup: false     villager-death: false     # Monsters won't follow players     # permission essentials.protect.entitytarget.bypass disables this     entitytarget: false     # Prevent the spawning of creatures     spawn:       creeper: false       skeleton: false       spider: false       giant: false       zombie: false       slime: false       ghast: false       pig_zombie: false       enderman: false       cave_spider: false       silverfish: false       blaze: false       magma_cube: false       ender_dragon: false       pig: false       sheep: false       cow: false       chicken: false       squid: false       wolf: false       mushroom_cow: false       snowman: false       ocelot: false       iron_golem: false       villager: false       wither: false       bat: false       witch: false          # Maximum height the creeper should explode. -1 allows them to explode everywhere.   # Set prevent.creeper-explosion to true, if you want to disable creeper explosions.   creeper:     max-height: -1    # Protect various blocks.   protect:     # Protect all signs     signs: false      # Prevent users from destroying rails     rails: false      # Blocks below rails/signs are also protected if the respective rail/sign is protected.     # This makes it more difficult to circumvent protection, and should be enabled.     # This only has an effect if ""rails"" or ""signs"" is also enabled.     block-below: true      # Prevent placing blocks above protected rails, this is to stop a potential griefing     prevent-block-on-rails: false      # Store blocks / signs in memory before writing     memstore: false    # Disable various default physics and behaviors   disable:     # Should fall damage be disabled?     fall: false      # Users with the essentials.protect.pvp permission will still be able to attack each other if this is set to true.     # They will be unable to attack users without that same permission node.     pvp: false      # Should drowning damage be disabled?     # (Split into two behaviors; generally, you want both set to the same value)     drown: false     suffocate: false      # Should damage via lava be disabled?  Items that fall into lava will still burn to a crisp. ;)     lavadmg: false      # Should arrow damage be disabled     projectiles: false      # This will disable damage from touching cacti.     contactdmg: false      # Burn, baby, burn!  Should fire damage be disabled?     firedmg: false      # Should the damage after hit by a lightning be disabled?     lightning: false          # Should Wither damage be disabled?     wither: false      # Disable weather options     weather:       storm: false       thunder: false       lightning: false       ############################################################ # +------------------------------------------------------+ # # |                EssentialsAntiBuild                   | # # +------------------------------------------------------+ # ############################################################    # Disable various default physics and behaviors   # For more information, visit http://wiki.ess3.net/wiki/AntiBuild      # Should people with build: false in permissions be allowed to build     # Set true to disable building for those people     # Setting to false means EssentialsAntiBuild will never prevent you from building     build: true      # Should people with build: false in permissions be allowed to use items     # Set true to disable using for those people     # Setting to false means EssentialsAntiBuild will never prevent you from using     use: true      # Should we tell people they are not allowed to build     warn-on-build-disallow: true    # For which block types would you like to be alerted?   # You can find a list of IDs in plugins/Essentials/items.csv after loading Essentials for the first time.   # 10 = lava :: 11 = still lava :: 46 = TNT :: 327 = lava bucket   alert:     on-placement: 10,11,46,327     on-use: 327     on-break:    blacklist:      # Which blocks should people be prevented from placing     placement: 10,11,46,327      # Which items should people be prevented from using     usage: 327      # Which blocks should people be prevented from breaking     break:      # Which blocks should not be pushed by pistons     piston:  ############################################################ # +------------------------------------------------------+ # # |            Essentials Spawn / New Players            | # # +------------------------------------------------------+ # ############################################################  newbies:   # Should we announce to the server when someone logs in for the first time?   # If so, use this format, replacing {DISPLAYNAME} with the player name.   # If not, set to ''   #announce-format: ''   announce-format: '&dWelcome {DISPLAYNAME}&d to the server!'    # When we spawn for the first time, which spawnpoint do we use?   # Set to ""none"" if you want to use the spawn point of the world.   spawnpoint: newbies    # Do we want to give users anything on first join? Set to '' to disable   # This kit will be given regardless  of cost, and permissions.   #kit: ''   kit: tools  # Set this to lowest, if you want Multiverse to handle the respawning # Set this to high, if you want EssentialsSpawn to handle the respawning # Set this to highest, if you want to force EssentialsSpawn to handle the respawning respawn-listener-priority: high  # When users die, should they respawn at their first home or bed, instead of the spawnpoint? respawn-at-home: false  # End of File <-- No seriously, you're done with configuration.",5,0,5,location+request+weather,GitHub
2,node-js3-weather-website,https://github.com/beastgetssavvy13/node-js3-weather-website.git,"Re-created a simple weather website using Node.js, Express, and Axios for submitting an API request to MapQuest and DarkSky to retrieve location information and the current weather, respectively |  Visit the Heroku link",4,0,4,location+request+weather,GitHub
3,sqygd,https://github.com/dallyswag/sqygd.git,"############################################################ # +------------------------------------------------------+ # # |                       Notes                          | # # +------------------------------------------------------+ # ############################################################  # If you want to use special characters in this document, such as accented letters, you MUST save the file as UTF-8, not ANSI. # If you receive an error when Essentials loads, ensure that: #   - No tabs are present: YAML only allows spaces #   - Indents are correct: YAML hierarchy is based entirely on indentation #   - You have ""escaped"" all apostrophes in your text: If you want to write ""don't"", for example, write ""don''t"" instead (note the doubled apostrophe) #   - Text with symbols is enclosed in single or double quotation marks  # If you have problems join the Essentials help support channel: http://tiny.cc/EssentialsChat  ############################################################ # +------------------------------------------------------+ # # |                 Essentials (Global)                  | # # +------------------------------------------------------+ # ############################################################  # A color code between 0-9 or a-f. Set to 'none' to disable. ops-name-color: '4'  # The character(s) to prefix all nicknames, so that you know they are not true usernames. nickname-prefix: '~'  # The maximum length allowed in nicknames. The nickname prefix is included in this. max-nick-length: 15  # Disable this if you have any other plugin, that modifies the displayname of a user. change-displayname: true  # When this option is enabled, the (tab) player list will be updated with the displayname. # The value of change-displayname (above) has to be true. #change-playerlist: true  # When essentialschat.jar isn't used, force essentials to add the prefix and suffix from permission plugins to displayname. # This setting is ignored if essentialschat.jar is used, and defaults to 'true'. # The value of change-displayname (above) has to be true. # Do not edit this setting unless you know what you are doing! #add-prefix-suffix: false  # If the teleport destination is unsafe, should players be teleported to the nearest safe location? # If this is set to true, Essentials will attempt to teleport players close to the intended destination. # If this is set to false, attempted teleports to unsafe locations will be cancelled with a warning. teleport-safety: true  # The delay, in seconds, required between /home, /tp, etc. teleport-cooldown: 3  # The delay, in seconds, before a user actually teleports.  If the user moves or gets attacked in this timeframe, the teleport never occurs. teleport-delay: 5  # The delay, in seconds, a player can't be attacked by other players after they have been teleported by a command. # This will also prevent the player attacking other players. teleport-invulnerability: 4  # The delay, in seconds, required between /heal or /feed attempts. heal-cooldown: 60  # What to prevent from /i /give. # e.g item-spawn-blacklist: 46,11,10 item-spawn-blacklist:  # Set this to true if you want permission based item spawn rules. # Note: The blacklist above will be ignored then. # Example permissions (these go in your permissions manager): #  - essentials.itemspawn.item-all #  - essentials.itemspawn.item-[itemname] #  - essentials.itemspawn.item-[itemid] #  - essentials.give.item-all #  - essentials.give.item-[itemname] #  - essentials.give.item-[itemid] #  - essentials.unlimited.item-all #  - essentials.unlimited.item-[itemname] #  - essentials.unlimited.item-[itemid] #  - essentials.unlimited.item-bucket # Unlimited liquid placing # # For more information, visit http://wiki.ess3.net/wiki/Command_Reference/ICheat#Item.2FGive permission-based-item-spawn: false  # Mob limit on the /spawnmob command per execution. spawnmob-limit: 1  # Shall we notify users when using /lightning? warn-on-smite: true  # motd and rules are now configured in the files motd.txt and rules.txt.  # When a command conflicts with another plugin, by default, Essentials will try to force the OTHER plugin to take priority. # Commands in this list, will tell Essentials to 'not give up' the command to other plugins. # In this state, which plugin 'wins' appears to be almost random. # # If you have two plugin with the same command and you wish to force Essentials to take over, you need an alias. # To force essentials to take 'god' alias 'god' to 'egod'. # See http://wiki.bukkit.org/Bukkit.yml#aliases for more information  overridden-commands: #  - god #  - info  # Disabling commands here will prevent Essentials handling the command, this will not affect command conflicts. # Commands should fallback to the vanilla versions if available. # You should not have to disable commands used in other plugins, they will automatically get priority. disabled-commands: #  - nick #  - clear    - mail    - mail.send    - nuke    - afk  # These commands will be shown to players with socialSpy enabled. # You can add commands from other plugins you may want to track or # remove commands that are used for something you dont want to spy on. socialspy-commands:   - msg   - w   - r   - mail   - m   - t   - whisper   - emsg   - tell   - er   - reply   - ereply   - email   - action   - describe   - eme   - eaction   - edescribe   - etell   - ewhisper   - pm  # If you do not wish to use a permission system, you can define a list of 'player perms' below. # This list has no effect if you are using a supported permissions system. # If you are using an unsupported permissions system, simply delete this section. # Whitelist the commands and permissions you wish to give players by default (everything else is op only). # These are the permissions without the ""essentials."" part. player-commands:   - afk   - afk.auto   - back   - back.ondeath   - balance   - balance.others   - balancetop   - build   - chat.color   - chat.format   - chat.shout   - chat.question   - clearinventory   - compass   - depth   - delhome   - getpos   - geoip.show   - help   - helpop   - home   - home.others   - ignore   - info   - itemdb   - kit   - kits.tools   - list   - mail   - mail.send   - me   - motd   - msg   - msg.color   - nick   - near   - pay   - ping   - protect   - r   - rules   - realname   - seen   - sell   - sethome   - setxmpp   - signs.create.protection   - signs.create.trade   - signs.break.protection   - signs.break.trade   - signs.use.balance   - signs.use.buy   - signs.use.disposal   - signs.use.enchant   - signs.use.free   - signs.use.gamemode   - signs.use.heal   - signs.use.info   - signs.use.kit   - signs.use.mail   - signs.use.protection   - signs.use.repair   - signs.use.sell   - signs.use.time   - signs.use.trade   - signs.use.warp   - signs.use.weather   - spawn   - suicide   - time   - tpa   - tpaccept   - tpahere   - tpdeny   - warp   - warp.list   - world   - worth   - xmpp  # Note: All items MUST be followed by a quantity! # All kit names should be lower case, and will be treated as lower in permissions/costs. # Syntax: - itemID[:DataValue/Durability] Amount [Enchantment:Level].. [itemmeta:value]... # For Item meta information visit http://wiki.ess3.net/wiki/Item_Meta # 'delay' refers to the cooldown between how often you can use each kit, measured in seconds. # For more information, visit http://wiki.ess3.net/wiki/Kits kits:   Goblin:     delay: 3600     items:       - 272 1 sharpness:2 unbreaking:1 looting:1 name:&8[&2Goblin&8]&fSword       - 306 1 unbreaking:1 protection:1 name:&8[&2Goblin&8]&fHelmet       - 307 1 unbreaking:1 protection:1 name:&8[&2Goblin&8]&fChestplate       - 308 1 unbreaking:1 protection:1 name:&8[&2Goblin&8]&fLeggings       - 309 1 unbreaking:1 protection:1 name:&8[&2Goblin&8]&fBoots       - 256 1 efficiency:1 unbreaking:1 name:&8[&2Goblin&8]&fShovel       - 257 1 efficiency:1 unbreaking:1 fortune:1 name:&8[&2Goblin&8]&fPickaxe       - 258 1 efficiency:1 unbreaking:1 name:&8[&2Goblin&8]&fAxe       - 364 16    Griefer:     delay: 14400     items:       - 276 1 sharpness:3 unbreaking:3 name:&8[&d&lGriefer&8]&fSword       - 322:1 1       - 310 1 protection:2 name:&8[&d&lGriefer&8]&fHelmet       - 311 1 protection:2 name:&8[&d&lGriefer&8]&fChestplate       - 312 1 protection:2 name:&8[&d&lGriefer&8]&fLeggings       - 313 1 protection:2 name:&8[&d&lGriefer&8]&fBoots   Villager:     delay: 43200     items:       - 267 1 sharpness:4 name:&8[&eVillager&8]&fSword       - 306 1 unbreaking:3 protection:4 name:&8[&eVillager&8]&fHelmet       - 307 1 unbreaking:3 protection:4 name:&8[&eVillager&8]&fChestplate       - 308 1 unbreaking:3 protection:4 name:&8[&eVillager&8]&fLeggings       - 309 1 unbreaking:3 protection:4 name:&8[&eVillager&8]&fBoots       - 388 10       - 383:120 2     Knight:     delay: 43200     items:       - 276 1 sharpness:3 name:&8[&cKnight&8]&fSword       - 310 1 protection:2 name:&8[&cKnight&8]&fHelmet       - 311 1 protection:2 name:&8[&cKnight&8]&fChestplate       - 312 1 protection:2 name:&8[&cKnight&8]&fLeggings       - 313 1 protection:2 name:&8[&cKnight&8]&fBoots       - 388 20       - 383:120 4   King:     delay: 43200     items:       - 276 1 sharpness:4 fire:1 name:&8[&5King&8]&fSword       - 310 1 protection:4 name:&8[&5King&8]&fHelmet       - 311 1 protection:4 name:&8[&5King&8]&fChestplate       - 312 1 protection:4 name:&8[&5King&8]&fLeggings       - 313 1 protection:4 name:&8[&5King&8]&fBoots       - 388 30       - 383:120 6   Hero:     delay: 43200     items:       - 276 1 sharpness:4 fire:2 name:&8[&aHero&8]&fSword       - 310 1 protection:4 unbreaking:1 name:&8[&aHero&8]&fHelmet       - 311 1 protection:4 unbreaking:1 name:&8[&aHero&8]&fChestplate       - 312 1 protection:4 unbreaking:1 name:&8[&aHero&8]&fLeggings       - 313 1 protection:4 unbreaking:1 name:&8[&aHero&8]&fBoots       - 388 40       - 383:120 8   God:     delay: 43200     items:       - 276 1 sharpness:5 fire:2 name:&8[&4God&8]&fSword       - 310 1 protection:4 unbreaking:3 name:&8[&4God&8]&fHelmet       - 311 1 protection:4 unbreaking:3 name:&8[&4God&8]&fChestplate       - 312 1 protection:4 unbreaking:3 name:&8[&4God&8]&fLeggings       - 313 1 protection:4 unbreaking:3 name:&8[&4God&8]&fBoots       - 388 50       - 383:120 10       - 322:1 5   Legend:     delay: 43200     items:       - 276 1 sharpness:5 fire:2 unbreaking:3 name:&8[&6&lLegend&8]&fSword       - 310 1 protection:4 unbreaking:3 thorns:3  name:&8[&6&lLegend&8]&fHelmet       - 311 1 protection:4 unbreaking:3 thorns:3  name:&8[&6&lLegend&8]&fChestplate       - 312 1 protection:4 unbreaking:3 thorns:3 name:&8[&6&lLegend&8]&fLeggings       - 313 1 protection:4 unbreaking:3 thorns:3 name:&8[&6&lLegend&8]&fBoots       - 388 60       - 383:120 12       - 322:1 10       - 383:50 5       - 261 1 flame:1 power:5 punch:2 unbreaking:3 infinity:1 name:&8[&6&lLegend&8]&fBow       - 262 1       - 279 1 sharpness:5 unbreaking:3 name:&8[&6&lLegend&8]&fAxe   Youtube:     delay: 43200     items:       - 276 1 sharpness:5 fire:2 unbreaking:3 name:&8[&f&lYou&c&lTube&8]&fSword       - 310 1 protection:4 unbreaking:3 thorns:3  name:&8[&f&lYou&c&lTube&8]&fHelmet       - 311 1 protection:4 unbreaking:3 thorns:3  name:&8[&f&lYou&c&lTube&8]&fChestplate       - 312 1 protection:4 unbreaking:3 thorns:3 name:&8[&f&lYou&c&lTube&8]&fLeggings       - 313 1 protection:4 unbreaking:3 thorns:3 name:&8[&f&lYou&c&lTube&8]&fBoots       - 388 60       - 383:120 12       - 322:1 10       - 383:50 5       - 261 1 flame:1 power:5 punch:2 unbreaking:3 infinity:1 name:&8[&f&lYou&c&lTube&8]&fBow       - 262 1       - 279 1 sharpness:5 unbreaking:3 name:&8[&f&lYou&c&lTube&8]&fAxe   Join:     delay: 3600     items:       - 17 16        - 333 1       - 49 32       - 50 16       - 4 64       - 373:8258 1       - 320 16   Reset:     delay: 31536000     items:       - 272 1 sharpness:4 unbreaking:3 name:&8[&cR&ee&as&be&dt&8]&fSword       - 298 1 protection:3 unbreaking:1 name:&8[&cR&ee&as&be&dt&8]&fHelmet       - 299 1 protection:3 unbreaking:1 name:&8[&cR&ee&as&be&dt&8]&fChestplate       - 300 1 protection:3 unbreaking:1 name:&8[&cR&ee&as&be&dt&8]&fLeggings       - 301 1 protection:3 unbreaking:1 name:&8[&cR&ee&as&be&dt&8]&fBoots       - 354 1 name:&f&l Cake &4Vote  # Essentials Sign Control # See http://wiki.ess3.net/wiki/Sign_Tutorial for instructions on how to use these. # To enable signs, remove # symbol. To disable all signs, comment/remove each sign. # Essentials Colored sign support will be enabled when any sign types are enabled. # Color is not an actual sign, it's for enabling using color codes on signs, when the correct permissions are given.  enabledSigns:    - color    - balance    - buy    - sell   #- trade   #- free   #- disposal   #- warp   #- kit   #- mail   #- enchant   #- gamemode   #- heal   #- info   #- spawnmob   #- repair   #- time   #- weather  # How many times per second can Essentials signs be interacted with per player. # Values should be between 1-20, 20 being virtually no lag protection. # Lower numbers will reduce the possibility of lag, but may annoy players. sign-use-per-second: 4  # Backup runs a batch/bash command while saving is disabled. backup:   # Interval in minutes.   interval: 30   # Unless you add a valid backup command or script here, this feature will be useless.   # Use 'save-all' to simply force regular world saving without backup.   #command: 'rdiff-backup World1 backups/World1'  # Set this true to enable permission per warp. per-warp-permission: false  # Sort output of /list command by groups. # You can hide and merge the groups displayed in /list by defining the desired behaviour here. # Detailed instructions and examples can be found on the wiki: http://wiki.ess3.net/wiki/List list:     # To merge groups, list the groups you wish to merge     #Staff: owner admin moderator     Admins: owner admin     # To limit groups, set a max user limit     #builder: 20     # To hide groups, set the group as hidden     #default: hidden     # Uncomment the line below to simply list all players with no grouping     #Players: '*'  # More output to the console. debug: false  # Set the locale for all messages. # If you don't set this, the default locale of the server will be used. # For example, to set language to English, set locale to en, to use the file ""messages_en.properties"". # Don't forget to remove the # in front of the line. # For more information, visit http://wiki.ess3.net/wiki/Locale #locale: en  # Turn off god mode when people exit. remove-god-on-disconnect: false  # Auto-AFK # After this timeout in seconds, the user will be set as afk. # This feature requires the player to have essentials.afk.auto node. # Set to -1 for no timeout. auto-afk: 300  # Auto-AFK Kick # After this timeout in seconds, the user will be kicked from the server. # essentials.afk.kickexempt node overrides this feature. # Set to -1 for no timeout. auto-afk-kick: -1  # Set this to true, if you want to freeze the player, if he is afk. # Other players or monsters can't push him out of afk mode then. # This will also enable temporary god mode for the afk player. # The player has to use the command /afk to leave the afk mode. freeze-afk-players: false  # When the player is afk, should he be able to pickup items? # Enable this, when you don't want people idling in mob traps. disable-item-pickup-while-afk: false  # This setting controls if a player is marked as active on interaction. # When this setting is false, you will need to manually un-AFK using the /afk command. cancel-afk-on-interact: true  # Should we automatically remove afk status when the player moves? # Player will be removed from AFK on chat/command regardless of this setting. # Disable this to reduce server lag. cancel-afk-on-move: true  # You can disable the death messages of Minecraft here. death-messages: false  # Should operators be able to join and part silently. # You can control this with permissions if it is enabled. allow-silent-join-quit: true  # You can set a custom join message here, set to ""none"" to disable. # You may use color codes, use {USERNAME} the player's name or {PLAYER} for the player's displayname. custom-join-message: """"  # You can set a custom quit message here, set to ""none"" to disable. # You may use color codes, use {USERNAME} the player's name or {PLAYER} for the player's displayname. custom-quit-message: """"  # Add worlds to this list, if you want to automatically disable god mode there. no-god-in-worlds: #  - world_nether  # Set to true to enable per-world permissions for teleporting between worlds with essentials commands. # This applies to /world, /back, /tp[a|o][here|all], but not warps. # Give someone permission to teleport to a world with essentials.worlds.<worldname> # This does not affect the /home command, there is a separate toggle below for this. world-teleport-permissions: false  # The number of items given if the quantity parameter is left out in /item or /give. # If this number is below 1, the maximum stack size size is given. If over-sized stacks. # are not enabled, any number higher than the maximum stack size results in more than one stack. default-stack-size: -1  # Over-sized stacks are stacks that ignore the normal max stack size. # They can be obtained using /give and /item, if the player has essentials.oversizedstacks permission. # How many items should be in an over-sized stack? oversized-stacksize: 64  # Allow repair of enchanted weapons and armor. # If you set this to false, you can still allow it for certain players using the permission. # essentials.repair.enchanted repair-enchanted: true  # Allow 'unsafe' enchantments in kits and item spawning. # Warning: Mixing and overleveling some enchantments can cause issues with clients, servers and plugins. unsafe-enchantments: false  #Do you want essentials to keep track of previous location for /back in the teleport listener? #If you set this to true any plugin that uses teleport will have the previous location registered. register-back-in-listener: false  #Delay to wait before people can cause attack damage after logging in. login-attack-delay: 5  #Set the max fly speed, values range from 0.1 to 1.0 max-fly-speed: 0.8  #Set the max walk speed, values range from 0.1 to 1.0 max-walk-speed: 0.8  #Set the maximum amount of mail that can be sent within a minute. mails-per-minute: 1000  # Set the maximum time /tempban can be used for in seconds. # Set to -1 to disable, and essentials.tempban.unlimited can be used to override. max-tempban-time: -1  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsHome                     | # # +------------------------------------------------------+ # ############################################################  # Allows people to set their bed at daytime. update-bed-at-daytime: true  # Set to true to enable per-world permissions for using homes to teleport between worlds. # This applies to the /home only. # Give someone permission to teleport to a world with essentials.worlds.<worldname> world-home-permissions: false  # Allow players to have multiple homes. # Players need essentials.sethome.multiple before they can have more than 1 home. # You can set the default number of multiple homes using the 'default' rank below. # To remove the home limit entirely, give people 'essentials.sethome.multiple.unlimited'. # To grant different home amounts to different people, you need to define a 'home-rank' below. # Create the 'home-rank' below, and give the matching permission: essentials.sethome.multiple.<home-rank> # For more information, visit http://wiki.ess3.net/wiki/Multihome sethome-multiple:   Goblin: 1   Villager: 2   Knight: 3   King: 4   Hero: 5   God: 6  # In this example someone with 'essentials.sethome.multiple' and 'essentials.sethome.multiple.vip' will have 5 homes.  # Set timeout in seconds for players to accept tpa before request is cancelled. # Set to 0 for no timeout. tpa-accept-cancellation: 120  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsEco                      | # # +------------------------------------------------------+ # ############################################################  # For more information, visit http://wiki.ess3.net/wiki/Essentials_Economy  # Defines the balance with which new players begin.  Defaults to 0. starting-balance: 1000  # worth-# defines the value of an item when it is sold to the server via /sell. # These are now defined in worth.yml  # Defines the cost to use the given commands PER USE. # Some commands like /repair have sub-costs, check the wiki for more information. command-costs:   # /example costs $1000 PER USE   #example: 1000   # /kit tools costs $1500 PER USE   #kit-tools: 1500  # Set this to a currency symbol you want to use. currency-symbol: '$'  # Set the maximum amount of money a player can have. # The amount is always limited to 10 trillion because of the limitations of a java double. max-money: 10000000000000  # Set the minimum amount of money a player can have (must be above the negative of max-money). # Setting this to 0, will disable overdrafts/loans completely.  Users need 'essentials.eco.loan' perm to go below 0. min-money: -10000  # Enable this to log all interactions with trade/buy/sell signs and sell command. economy-log-enabled: false  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsHelp                     | # # +------------------------------------------------------+ # ############################################################  # Show other plugins commands in help. non-ess-in-help: true  # Hide plugins which do not give a permission. # You can override a true value here for a single plugin by adding a permission to a user/group. # The individual permission is: essentials.help.<plugin>, anyone with essentials.* or '*' will see all help regardless. # You can use negative permissions to remove access to just a single plugins help if the following is enabled. hide-permissionless-help: true  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsChat                     | # # +------------------------------------------------------+ # ############################################################  chat:    # If EssentialsChat is installed, this will define how far a player's voice travels, in blocks.  Set to 0 to make all chat global.   # Note that users with the ""essentials.chat.spy"" permission will hear everything, regardless of this setting.   # Users with essentials.chat.shout can override this by prefixing text with an exclamation mark (!)   # Users with essentials.chat.question can override this by prefixing text with a question mark (?)   # You can add command costs for shout/question by adding chat-shout and chat-question to the command costs section.""   radius: 0    # Chat formatting can be done in two ways, you can either define a standard format for all chat.   # Or you can give a group specific chat format, to give some extra variation.   # If set to the default chat format which ""should"" be compatible with ichat.   # For more information of chat formatting, check out the wiki: http://wiki.ess3.net/wiki/Chat_Formatting    format: '<{DISPLAYNAME}> {MESSAGE}'   #format: '&7[{GROUP}]&r {DISPLAYNAME}&7:&r {MESSAGE}'    group-formats:      Goblin: '&7{DISPLAYNAME}&8:&f&o {MESSAGE}'      Youtuber: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Witch: '&7{DISPLAYNAME}&8:&f&o {MESSAGE}'      Wizard: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Sorcerer: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Raider: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Greifer: '&7{DISPLAYNAME}&8:&a {MESSAGE}'      ChatMod: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Owner: '&7{DISPLAYNAME}&8:&c {MESSAGE}'      OP: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Developer: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      HeadAdmin: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Admin: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      JuniorAdmin: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      StaffManager: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      ForumAdmin: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      HeadModerator: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Moderator: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Helper: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Villager: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Knight: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      King: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Hero: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      God: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Legend: '&7{DISPLAYNAME}&8:&b {MESSAGE}'    # If you are using group formats make sure to remove the '#' to allow the setting to be read.  ############################################################ # +------------------------------------------------------+ # # |                 EssentialsProtect                    | # # +------------------------------------------------------+ # ############################################################  protect:    # General physics/behavior modifications.   prevent:     lava-flow: false     water-flow: false     water-bucket-flow: false     fire-spread: true     lava-fire-spread: true     flint-fire: false     lightning-fire-spread: true     portal-creation: false     tnt-explosion: false     tnt-playerdamage: false     tnt-minecart-explosion: false     tnt-minecart-playerdamage: false     fireball-explosion: false     fireball-fire: false     fireball-playerdamage: false     witherskull-explosion: false     witherskull-playerdamage: false     wither-spawnexplosion: false     wither-blockreplace: false     creeper-explosion: false     creeper-playerdamage: false     creeper-blockdamage: false     enderdragon-blockdamage: true     enderman-pickup: false     villager-death: false     # Monsters won't follow players.     # permission essentials.protect.entitytarget.bypass disables this.     entitytarget: false     # Prevent the spawning of creatures.     spawn:       creeper: false       skeleton: false       spider: false       giant: false       zombie: false       slime: false       ghast: false       pig_zombie: false       enderman: false       cave_spider: false       silverfish: false       blaze: false       magma_cube: false       ender_dragon: false       pig: false       sheep: false       cow: false       chicken: false       squid: false       wolf: false       mushroom_cow: false       snowman: false       ocelot: false       iron_golem: false       villager: false       wither: true       bat: false       witch: false       horse: false    # Maximum height the creeper should explode. -1 allows them to explode everywhere.   # Set prevent.creeper-explosion to true, if you want to disable creeper explosions.   creeper:     max-height: -1    # Disable various default physics and behaviors.   disable:     # Should fall damage be disabled?     fall: false      # Users with the essentials.protect.pvp permission will still be able to attack each other if this is set to true.     # They will be unable to attack users without that same permission node.     pvp: false      # Should drowning damage be disabled?     # (Split into two behaviors; generally, you want both set to the same value.)     drown: false     suffocate: false      # Should damage via lava be disabled?  Items that fall into lava will still burn to a crisp. ;)     lavadmg: false      # Should arrow damage be disabled?     projectiles: false      # This will disable damage from touching cacti.     contactdmg: false      # Burn, baby, burn!  Should fire damage be disabled?     firedmg: false      # Should the damage after hit by a lightning be disabled?     lightning: false      # Should Wither damage be disabled?     wither: false      # Disable weather options?     weather:       storm: false       thunder: false       lightning: false  ############################################################ # +------------------------------------------------------+ # # |                EssentialsAntiBuild                   | # # +------------------------------------------------------+ # ############################################################    # Disable various default physics and behaviors   # For more information, visit http://wiki.ess3.net/wiki/AntiBuild      # Should people with build: false in permissions be allowed to build?     # Set true to disable building for those people.     # Setting to false means EssentialsAntiBuild will never prevent you from building.     build: true      # Should people with build: false in permissions be allowed to use items?     # Set true to disable using for those people.     # Setting to false means EssentialsAntiBuild will never prevent you from using items.     use: true      # Should we tell people they are not allowed to build?     warn-on-build-disallow: true    # For which block types would you like to be alerted?   # You can find a list of IDs in plugins/Essentials/items.csv after loading Essentials for the first time.   # 10 = lava :: 11 = still lava :: 46 = TNT :: 327 = lava bucket   alert:     on-placement: 10,11,46,327     on-use: 327     on-break:    blacklist:      # Which blocks should people be prevented from placing?     placement: 10,11,46,327      # Which items should people be prevented from using?     usage: 327      # Which blocks should people be prevented from breaking?     break:      # Which blocks should not be pushed by pistons?     piston:      # Which blocks should not be dispensed by dispensers     dispenser:  ############################################################ # +------------------------------------------------------+ # # |            Essentials Spawn / New Players            | # # +------------------------------------------------------+ # ############################################################  newbies:   # Should we announce to the server when someone logs in for the first time?   # If so, use this format, replacing {DISPLAYNAME} with the player name.   # If not, set to ''   #announce-format: ''   announce-format: '&cWelcome &e&l{DISPLAYNAME}&c to the &8R&7e&8t&7r&8o&4-&cFactions server!'    # When we spawn for the first time, which spawnpoint do we use?   # Set to ""none"" if you want to use the spawn point of the world.   spawnpoint: newbies    # Do we want to give users anything on first join? Set to '' to disable   # This kit will be given regardless of cost, and permissions.   #kit: ''   kit: join  # Set this to lowest, if you want Multiverse to handle the respawning. # Set this to high, if you want EssentialsSpawn to handle the respawning. # Set this to highest, if you want to force EssentialsSpawn to handle the respawning. respawn-listener-priority: high  # When users die, should they respawn at their first home or bed, instead of the spawnpoint? respawn-at-home: false  # End of File <-- No seriously, you're done with configuration.",4,9,4,location+request+weather,GitHub
4,weather-challenge,https://github.com/lausoffici/weather-challenge.git,Full client-side app to request current and 5-day forecast weather data of client's location or of a specified city.,3,0,3,location+request+weather+react,GitHub
5,PythonWeatherScraper,https://github.com/jbsec/PythonWeatherScraper.git,"A simple Python web scraper that pulls and formats weather information from a US website. Can be adapted to use any city or location or even re-worked to use a different website altogether. WILL REQUIRE THE INSTALLATION OF BEAUTIFULSOUP 4, REQUESTS, AND PANDAS. Thanks :p",3,0,3,location+request+weather,GitHub
6,Robert---Swag,https://github.com/dallyswag/Robert---Swag.git,"############################################################ # +------------------------------------------------------+ # # |                       Notes                          | # # +------------------------------------------------------+ # ############################################################  # If you want to use special characters in this document, such as accented letters, you MUST save the file as UTF-8, not ANSI. # If you receive an error when Essentials loads, ensure that: #   - No tabs are present: YAML only allows spaces #   - Indents are correct: YAML hierarchy is based entirely on indentation #   - You have ""escaped"" all apostrophes in your text: If you want to write ""don't"", for example, write ""don''t"" instead (note the doubled apostrophe) #   - Text with symbols is enclosed in single or double quotation marks  # If you have problems join the Essentials help support channel: http://tiny.cc/EssentialsChat  ############################################################ # +------------------------------------------------------+ # # |                 Essentials (Global)                  | # # +------------------------------------------------------+ # ############################################################  # A color code between 0-9 or a-f. Set to 'none' to disable. ops-name-color: '4'  # The character(s) to prefix all nicknames, so that you know they are not true usernames. nickname-prefix: '~'  # The maximum length allowed in nicknames. The nickname prefix is included in this. max-nick-length: 15  # Disable this if you have any other plugin, that modifies the displayname of a user. change-displayname: true  # When this option is enabled, the (tab) player list will be updated with the displayname. # The value of change-displayname (above) has to be true. #change-playerlist: true  # When essentialschat.jar isn't used, force essentials to add the prefix and suffix from permission plugins to displayname. # This setting is ignored if essentialschat.jar is used, and defaults to 'true'. # The value of change-displayname (above) has to be true. # Do not edit this setting unless you know what you are doing! #add-prefix-suffix: false  # If the teleport destination is unsafe, should players be teleported to the nearest safe location? # If this is set to true, Essentials will attempt to teleport players close to the intended destination. # If this is set to false, attempted teleports to unsafe locations will be cancelled with a warning. teleport-safety: true  # The delay, in seconds, required between /home, /tp, etc. teleport-cooldown: 3  # The delay, in seconds, before a user actually teleports.  If the user moves or gets attacked in this timeframe, the teleport never occurs. teleport-delay: 5  # The delay, in seconds, a player can't be attacked by other players after they have been teleported by a command. # This will also prevent the player attacking other players. teleport-invulnerability: 4  # The delay, in seconds, required between /heal or /feed attempts. heal-cooldown: 60  # What to prevent from /i /give. # e.g item-spawn-blacklist: 46,11,10 item-spawn-blacklist:  # Set this to true if you want permission based item spawn rules. # Note: The blacklist above will be ignored then. # Example permissions (these go in your permissions manager): #  - essentials.itemspawn.item-all #  - essentials.itemspawn.item-[itemname] #  - essentials.itemspawn.item-[itemid] #  - essentials.give.item-all #  - essentials.give.item-[itemname] #  - essentials.give.item-[itemid] #  - essentials.unlimited.item-all #  - essentials.unlimited.item-[itemname] #  - essentials.unlimited.item-[itemid] #  - essentials.unlimited.item-bucket # Unlimited liquid placing # # For more information, visit http://wiki.ess3.net/wiki/Command_Reference/ICheat#Item.2FGive permission-based-item-spawn: false  # Mob limit on the /spawnmob command per execution. spawnmob-limit: 1  # Shall we notify users when using /lightning? warn-on-smite: true  # motd and rules are now configured in the files motd.txt and rules.txt.  # When a command conflicts with another plugin, by default, Essentials will try to force the OTHER plugin to take priority. # Commands in this list, will tell Essentials to 'not give up' the command to other plugins. # In this state, which plugin 'wins' appears to be almost random. # # If you have two plugin with the same command and you wish to force Essentials to take over, you need an alias. # To force essentials to take 'god' alias 'god' to 'egod'. # See http://wiki.bukkit.org/Bukkit.yml#aliases for more information  overridden-commands: #  - god #  - info  # Disabling commands here will prevent Essentials handling the command, this will not affect command conflicts. # Commands should fallback to the vanilla versions if available. # You should not have to disable commands used in other plugins, they will automatically get priority. disabled-commands: #  - nick #  - clear    - mail    - mail.send    - nuke    - afk  # These commands will be shown to players with socialSpy enabled. # You can add commands from other plugins you may want to track or # remove commands that are used for something you dont want to spy on. socialspy-commands:   - msg   - w   - r   - mail   - m   - t   - whisper   - emsg   - tell   - er   - reply   - ereply   - email   - action   - describe   - eme   - eaction   - edescribe   - etell   - ewhisper   - pm  # If you do not wish to use a permission system, you can define a list of 'player perms' below. # This list has no effect if you are using a supported permissions system. # If you are using an unsupported permissions system, simply delete this section. # Whitelist the commands and permissions you wish to give players by default (everything else is op only). # These are the permissions without the ""essentials."" part. player-commands:   - afk   - afk.auto   - back   - back.ondeath   - balance   - balance.others   - balancetop   - build   - chat.color   - chat.format   - chat.shout   - chat.question   - clearinventory   - compass   - depth   - delhome   - getpos   - geoip.show   - help   - helpop   - home   - home.others   - ignore   - info   - itemdb   - kit   - kits.tools   - list   - mail   - mail.send   - me   - motd   - msg   - msg.color   - nick   - near   - pay   - ping   - protect   - r   - rules   - realname   - seen   - sell   - sethome   - setxmpp   - signs.create.protection   - signs.create.trade   - signs.break.protection   - signs.break.trade   - signs.use.balance   - signs.use.buy   - signs.use.disposal   - signs.use.enchant   - signs.use.free   - signs.use.gamemode   - signs.use.heal   - signs.use.info   - signs.use.kit   - signs.use.mail   - signs.use.protection   - signs.use.repair   - signs.use.sell   - signs.use.time   - signs.use.trade   - signs.use.warp   - signs.use.weather   - spawn   - suicide   - time   - tpa   - tpaccept   - tpahere   - tpdeny   - warp   - warp.list   - world   - worth   - xmpp  # Note: All items MUST be followed by a quantity! # All kit names should be lower case, and will be treated as lower in permissions/costs. # Syntax: - itemID[:DataValue/Durability] Amount [Enchantment:Level].. [itemmeta:value]... # For Item meta information visit http://wiki.ess3.net/wiki/Item_Meta # 'delay' refers to the cooldown between how often you can use each kit, measured in seconds. # For more information, visit http://wiki.ess3.net/wiki/Kits kits:   Goblin:     delay: 3600     items:       - 272 1 sharpness:2 unbreaking:1 looting:1 name:&8[&2Goblin&8]&fSword       - 306 1 unbreaking:1 protection:1 name:&8[&2Goblin&8]&fHelmet       - 307 1 unbreaking:1 protection:1 name:&8[&2Goblin&8]&fChestplate       - 308 1 unbreaking:1 protection:1 name:&8[&2Goblin&8]&fLeggings       - 309 1 unbreaking:1 protection:1 name:&8[&2Goblin&8]&fBoots       - 256 1 efficiency:1 unbreaking:1 name:&8[&2Goblin&8]&fShovel       - 257 1 efficiency:1 unbreaking:1 fortune:1 name:&8[&2Goblin&8]&fPickaxe       - 258 1 efficiency:1 unbreaking:1 name:&8[&2Goblin&8]&fAxe       - 364 16    Griefer:     delay: 14400     items:       - 276 1 sharpness:3 unbreaking:3 name:&8[&d&lGriefer&8]&fSword       - 322:1 1       - 310 1 protection:2 name:&8[&d&lGriefer&8]&fHelmet       - 311 1 protection:2 name:&8[&d&lGriefer&8]&fChestplate       - 312 1 protection:2 name:&8[&d&lGriefer&8]&fLeggings       - 313 1 protection:2 name:&8[&d&lGriefer&8]&fBoots   Villager:     delay: 43200     items:       - 267 1 sharpness:4 name:&8[&eVillager&8]&fSword       - 306 1 unbreaking:3 protection:4 name:&8[&eVillager&8]&fHelmet       - 307 1 unbreaking:3 protection:4 name:&8[&eVillager&8]&fChestplate       - 308 1 unbreaking:3 protection:4 name:&8[&eVillager&8]&fLeggings       - 309 1 unbreaking:3 protection:4 name:&8[&eVillager&8]&fBoots       - 388 10       - 383:120 2     Knight:     delay: 43200     items:       - 276 1 sharpness:3 name:&8[&cKnight&8]&fSword       - 310 1 protection:2 name:&8[&cKnight&8]&fHelmet       - 311 1 protection:2 name:&8[&cKnight&8]&fChestplate       - 312 1 protection:2 name:&8[&cKnight&8]&fLeggings       - 313 1 protection:2 name:&8[&cKnight&8]&fBoots       - 388 20       - 383:120 4   King:     delay: 43200     items:       - 276 1 sharpness:4 fire:1 name:&8[&5King&8]&fSword       - 310 1 protection:4 name:&8[&5King&8]&fHelmet       - 311 1 protection:4 name:&8[&5King&8]&fChestplate       - 312 1 protection:4 name:&8[&5King&8]&fLeggings       - 313 1 protection:4 name:&8[&5King&8]&fBoots       - 388 30       - 383:120 6   Hero:     delay: 43200     items:       - 276 1 sharpness:4 fire:2 name:&8[&aHero&8]&fSword       - 310 1 protection:4 unbreaking:1 name:&8[&aHero&8]&fHelmet       - 311 1 protection:4 unbreaking:1 name:&8[&aHero&8]&fChestplate       - 312 1 protection:4 unbreaking:1 name:&8[&aHero&8]&fLeggings       - 313 1 protection:4 unbreaking:1 name:&8[&aHero&8]&fBoots       - 388 40       - 383:120 8   God:     delay: 43200     items:       - 276 1 sharpness:5 fire:2 name:&8[&4God&8]&fSword       - 310 1 protection:4 unbreaking:3 name:&8[&4God&8]&fHelmet       - 311 1 protection:4 unbreaking:3 name:&8[&4God&8]&fChestplate       - 312 1 protection:4 unbreaking:3 name:&8[&4God&8]&fLeggings       - 313 1 protection:4 unbreaking:3 name:&8[&4God&8]&fBoots       - 388 50       - 383:120 10       - 322:1 5   Legend:     delay: 43200     items:       - 276 1 sharpness:5 fire:2 unbreaking:3 name:&8[&6&lLegend&8]&fSword       - 310 1 protection:4 unbreaking:3 thorns:3  name:&8[&6&lLegend&8]&fHelmet       - 311 1 protection:4 unbreaking:3 thorns:3  name:&8[&6&lLegend&8]&fChestplate       - 312 1 protection:4 unbreaking:3 thorns:3 name:&8[&6&lLegend&8]&fLeggings       - 313 1 protection:4 unbreaking:3 thorns:3 name:&8[&6&lLegend&8]&fBoots       - 388 60       - 383:120 12       - 322:1 10       - 383:50 5       - 261 1 flame:1 power:5 punch:2 unbreaking:3 infinity:1 name:&8[&6&lLegend&8]&fBow       - 262 1       - 279 1 sharpness:5 unbreaking:3 name:&8[&6&lLegend&8]&fAxe   Youtube:     delay: 43200     items:       - 276 1 sharpness:5 fire:2 unbreaking:3 name:&8[&f&lYou&c&lTube&8]&fSword       - 310 1 protection:4 unbreaking:3 thorns:3  name:&8[&f&lYou&c&lTube&8]&fHelmet       - 311 1 protection:4 unbreaking:3 thorns:3  name:&8[&f&lYou&c&lTube&8]&fChestplate       - 312 1 protection:4 unbreaking:3 thorns:3 name:&8[&f&lYou&c&lTube&8]&fLeggings       - 313 1 protection:4 unbreaking:3 thorns:3 name:&8[&f&lYou&c&lTube&8]&fBoots       - 388 60       - 383:120 12       - 322:1 10       - 383:50 5       - 261 1 flame:1 power:5 punch:2 unbreaking:3 infinity:1 name:&8[&f&lYou&c&lTube&8]&fBow       - 262 1       - 279 1 sharpness:5 unbreaking:3 name:&8[&f&lYou&c&lTube&8]&fAxe   Join:     delay: 3600     items:       - 17 16        - 333 1       - 49 32       - 50 16       - 4 64       - 373:8258 1       - 320 16   Reset:     delay: 31536000     items:       - 272 1 sharpness:4 unbreaking:3 name:&8[&cR&ee&as&be&dt&8]&fSword       - 298 1 protection:3 unbreaking:1 name:&8[&cR&ee&as&be&dt&8]&fHelmet       - 299 1 protection:3 unbreaking:1 name:&8[&cR&ee&as&be&dt&8]&fChestplate       - 300 1 protection:3 unbreaking:1 name:&8[&cR&ee&as&be&dt&8]&fLeggings       - 301 1 protection:3 unbreaking:1 name:&8[&cR&ee&as&be&dt&8]&fBoots       - 354 1 name:&f&l Cake &4Vote  # Essentials Sign Control # See http://wiki.ess3.net/wiki/Sign_Tutorial for instructions on how to use these. # To enable signs, remove # symbol. To disable all signs, comment/remove each sign. # Essentials Colored sign support will be enabled when any sign types are enabled. # Color is not an actual sign, it's for enabling using color codes on signs, when the correct permissions are given.  enabledSigns:    - color    - balance    - buy    - sell   #- trade   #- free   #- disposal   #- warp   #- kit   #- mail   #- enchant   #- gamemode   #- heal   #- info   #- spawnmob   #- repair   #- time   #- weather  # How many times per second can Essentials signs be interacted with per player. # Values should be between 1-20, 20 being virtually no lag protection. # Lower numbers will reduce the possibility of lag, but may annoy players. sign-use-per-second: 4  # Backup runs a batch/bash command while saving is disabled. backup:   # Interval in minutes.   interval: 30   # Unless you add a valid backup command or script here, this feature will be useless.   # Use 'save-all' to simply force regular world saving without backup.   #command: 'rdiff-backup World1 backups/World1'  # Set this true to enable permission per warp. per-warp-permission: false  # Sort output of /list command by groups. # You can hide and merge the groups displayed in /list by defining the desired behaviour here. # Detailed instructions and examples can be found on the wiki: http://wiki.ess3.net/wiki/List list:     # To merge groups, list the groups you wish to merge     #Staff: owner admin moderator     Admins: owner admin     # To limit groups, set a max user limit     #builder: 20     # To hide groups, set the group as hidden     #default: hidden     # Uncomment the line below to simply list all players with no grouping     #Players: '*'  # More output to the console. debug: false  # Set the locale for all messages. # If you don't set this, the default locale of the server will be used. # For example, to set language to English, set locale to en, to use the file ""messages_en.properties"". # Don't forget to remove the # in front of the line. # For more information, visit http://wiki.ess3.net/wiki/Locale #locale: en  # Turn off god mode when people exit. remove-god-on-disconnect: false  # Auto-AFK # After this timeout in seconds, the user will be set as afk. # This feature requires the player to have essentials.afk.auto node. # Set to -1 for no timeout. auto-afk: 300  # Auto-AFK Kick # After this timeout in seconds, the user will be kicked from the server. # essentials.afk.kickexempt node overrides this feature. # Set to -1 for no timeout. auto-afk-kick: -1  # Set this to true, if you want to freeze the player, if he is afk. # Other players or monsters can't push him out of afk mode then. # This will also enable temporary god mode for the afk player. # The player has to use the command /afk to leave the afk mode. freeze-afk-players: false  # When the player is afk, should he be able to pickup items? # Enable this, when you don't want people idling in mob traps. disable-item-pickup-while-afk: false  # This setting controls if a player is marked as active on interaction. # When this setting is false, you will need to manually un-AFK using the /afk command. cancel-afk-on-interact: true  # Should we automatically remove afk status when the player moves? # Player will be removed from AFK on chat/command regardless of this setting. # Disable this to reduce server lag. cancel-afk-on-move: true  # You can disable the death messages of Minecraft here. death-messages: false  # Should operators be able to join and part silently. # You can control this with permissions if it is enabled. allow-silent-join-quit: true  # You can set a custom join message here, set to ""none"" to disable. # You may use color codes, use {USERNAME} the player's name or {PLAYER} for the player's displayname. custom-join-message: """"  # You can set a custom quit message here, set to ""none"" to disable. # You may use color codes, use {USERNAME} the player's name or {PLAYER} for the player's displayname. custom-quit-message: """"  # Add worlds to this list, if you want to automatically disable god mode there. no-god-in-worlds: #  - world_nether  # Set to true to enable per-world permissions for teleporting between worlds with essentials commands. # This applies to /world, /back, /tp[a|o][here|all], but not warps. # Give someone permission to teleport to a world with essentials.worlds.<worldname> # This does not affect the /home command, there is a separate toggle below for this. world-teleport-permissions: false  # The number of items given if the quantity parameter is left out in /item or /give. # If this number is below 1, the maximum stack size size is given. If over-sized stacks. # are not enabled, any number higher than the maximum stack size results in more than one stack. default-stack-size: -1  # Over-sized stacks are stacks that ignore the normal max stack size. # They can be obtained using /give and /item, if the player has essentials.oversizedstacks permission. # How many items should be in an over-sized stack? oversized-stacksize: 64  # Allow repair of enchanted weapons and armor. # If you set this to false, you can still allow it for certain players using the permission. # essentials.repair.enchanted repair-enchanted: true  # Allow 'unsafe' enchantments in kits and item spawning. # Warning: Mixing and overleveling some enchantments can cause issues with clients, servers and plugins. unsafe-enchantments: false  #Do you want essentials to keep track of previous location for /back in the teleport listener? #If you set this to true any plugin that uses teleport will have the previous location registered. register-back-in-listener: false  #Delay to wait before people can cause attack damage after logging in. login-attack-delay: 5  #Set the max fly speed, values range from 0.1 to 1.0 max-fly-speed: 0.8  #Set the max walk speed, values range from 0.1 to 1.0 max-walk-speed: 0.8  #Set the maximum amount of mail that can be sent within a minute. mails-per-minute: 1000  # Set the maximum time /tempban can be used for in seconds. # Set to -1 to disable, and essentials.tempban.unlimited can be used to override. max-tempban-time: -1  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsHome                     | # # +------------------------------------------------------+ # ############################################################  # Allows people to set their bed at daytime. update-bed-at-daytime: true  # Set to true to enable per-world permissions for using homes to teleport between worlds. # This applies to the /home only. # Give someone permission to teleport to a world with essentials.worlds.<worldname> world-home-permissions: false  # Allow players to have multiple homes. # Players need essentials.sethome.multiple before they can have more than 1 home. # You can set the default number of multiple homes using the 'default' rank below. # To remove the home limit entirely, give people 'essentials.sethome.multiple.unlimited'. # To grant different home amounts to different people, you need to define a 'home-rank' below. # Create the 'home-rank' below, and give the matching permission: essentials.sethome.multiple.<home-rank> # For more information, visit http://wiki.ess3.net/wiki/Multihome sethome-multiple:   Goblin: 1   Villager: 2   Knight: 3   King: 4   Hero: 5   God: 6  # In this example someone with 'essentials.sethome.multiple' and 'essentials.sethome.multiple.vip' will have 5 homes.  # Set timeout in seconds for players to accept tpa before request is cancelled. # Set to 0 for no timeout. tpa-accept-cancellation: 120  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsEco                      | # # +------------------------------------------------------+ # ############################################################  # For more information, visit http://wiki.ess3.net/wiki/Essentials_Economy  # Defines the balance with which new players begin.  Defaults to 0. starting-balance: 1000  # worth-# defines the value of an item when it is sold to the server via /sell. # These are now defined in worth.yml  # Defines the cost to use the given commands PER USE. # Some commands like /repair have sub-costs, check the wiki for more information. command-costs:   # /example costs $1000 PER USE   #example: 1000   # /kit tools costs $1500 PER USE   #kit-tools: 1500  # Set this to a currency symbol you want to use. currency-symbol: '$'  # Set the maximum amount of money a player can have. # The amount is always limited to 10 trillion because of the limitations of a java double. max-money: 10000000000000  # Set the minimum amount of money a player can have (must be above the negative of max-money). # Setting this to 0, will disable overdrafts/loans completely.  Users need 'essentials.eco.loan' perm to go below 0. min-money: -10000  # Enable this to log all interactions with trade/buy/sell signs and sell command. economy-log-enabled: false  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsHelp                     | # # +------------------------------------------------------+ # ############################################################  # Show other plugins commands in help. non-ess-in-help: true  # Hide plugins which do not give a permission. # You can override a true value here for a single plugin by adding a permission to a user/group. # The individual permission is: essentials.help.<plugin>, anyone with essentials.* or '*' will see all help regardless. # You can use negative permissions to remove access to just a single plugins help if the following is enabled. hide-permissionless-help: true  ############################################################ # +------------------------------------------------------+ # # |                   EssentialsChat                     | # # +------------------------------------------------------+ # ############################################################  chat:    # If EssentialsChat is installed, this will define how far a player's voice travels, in blocks.  Set to 0 to make all chat global.   # Note that users with the ""essentials.chat.spy"" permission will hear everything, regardless of this setting.   # Users with essentials.chat.shout can override this by prefixing text with an exclamation mark (!)   # Users with essentials.chat.question can override this by prefixing text with a question mark (?)   # You can add command costs for shout/question by adding chat-shout and chat-question to the command costs section.""   radius: 0    # Chat formatting can be done in two ways, you can either define a standard format for all chat.   # Or you can give a group specific chat format, to give some extra variation.   # If set to the default chat format which ""should"" be compatible with ichat.   # For more information of chat formatting, check out the wiki: http://wiki.ess3.net/wiki/Chat_Formatting    format: '<{DISPLAYNAME}> {MESSAGE}'   #format: '&7[{GROUP}]&r {DISPLAYNAME}&7:&r {MESSAGE}'    group-formats:      Goblin: '&7{DISPLAYNAME}&8:&f&o {MESSAGE}'      Youtuber: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Witch: '&7{DISPLAYNAME}&8:&f&o {MESSAGE}'      Wizard: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Sorcerer: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Raider: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Greifer: '&7{DISPLAYNAME}&8:&a {MESSAGE}'      ChatMod: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Owner: '&7{DISPLAYNAME}&8:&c {MESSAGE}'      OP: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Developer: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      HeadAdmin: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Admin: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      JuniorAdmin: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      StaffManager: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      ForumAdmin: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      HeadModerator: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Moderator: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Helper: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Villager: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Knight: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      King: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Hero: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      God: '&7{DISPLAYNAME}&8:&f {MESSAGE}'      Legend: '&7{DISPLAYNAME}&8:&b {MESSAGE}'    # If you are using group formats make sure to remove the '#' to allow the setting to be read.  ############################################################ # +------------------------------------------------------+ # # |                 EssentialsProtect                    | # # +------------------------------------------------------+ # ############################################################  protect:    # General physics/behavior modifications.   prevent:     lava-flow: false     water-flow: false     water-bucket-flow: false     fire-spread: true     lava-fire-spread: true     flint-fire: false     lightning-fire-spread: true     portal-creation: false     tnt-explosion: false     tnt-playerdamage: false     tnt-minecart-explosion: false     tnt-minecart-playerdamage: false     fireball-explosion: false     fireball-fire: false     fireball-playerdamage: false     witherskull-explosion: false     witherskull-playerdamage: false     wither-spawnexplosion: false     wither-blockreplace: false     creeper-explosion: false     creeper-playerdamage: false     creeper-blockdamage: false     enderdragon-blockdamage: true     enderman-pickup: false     villager-death: false     # Monsters won't follow players.     # permission essentials.protect.entitytarget.bypass disables this.     entitytarget: false     # Prevent the spawning of creatures.     spawn:       creeper: false       skeleton: false       spider: false       giant: false       zombie: false       slime: false       ghast: false       pig_zombie: false       enderman: false       cave_spider: false       silverfish: false       blaze: false       magma_cube: false       ender_dragon: false       pig: false       sheep: false       cow: false       chicken: false       squid: false       wolf: false       mushroom_cow: false       snowman: false       ocelot: false       iron_golem: false       villager: false       wither: true       bat: false       witch: false       horse: false    # Maximum height the creeper should explode. -1 allows them to explode everywhere.   # Set prevent.creeper-explosion to true, if you want to disable creeper explosions.   creeper:     max-height: -1    # Disable various default physics and behaviors.   disable:     # Should fall damage be disabled?     fall: false      # Users with the essentials.protect.pvp permission will still be able to attack each other if this is set to true.     # They will be unable to attack users without that same permission node.     pvp: false      # Should drowning damage be disabled?     # (Split into two behaviors; generally, you want both set to the same value.)     drown: false     suffocate: false      # Should damage via lava be disabled?  Items that fall into lava will still burn to a crisp. ;)     lavadmg: false      # Should arrow damage be disabled?     projectiles: false      # This will disable damage from touching cacti.     contactdmg: false      # Burn, baby, burn!  Should fire damage be disabled?     firedmg: false      # Should the damage after hit by a lightning be disabled?     lightning: false      # Should Wither damage be disabled?     wither: false      # Disable weather options?     weather:       storm: false       thunder: false       lightning: false  ############################################################ # +------------------------------------------------------+ # # |                EssentialsAntiBuild                   | # # +------------------------------------------------------+ # ############################################################    # Disable various default physics and behaviors   # For more information, visit http://wiki.ess3.net/wiki/AntiBuild      # Should people with build: false in permissions be allowed to build?     # Set true to disable building for those people.     # Setting to false means EssentialsAntiBuild will never prevent you from building.     build: true      # Should people with build: false in permissions be allowed to use items?     # Set true to disable using for those people.     # Setting to false means EssentialsAntiBuild will never prevent you from using items.     use: true      # Should we tell people they are not allowed to build?     warn-on-build-disallow: true    # For which block types would you like to be alerted?   # You can find a list of IDs in plugins/Essentials/items.csv after loading Essentials for the first time.   # 10 = lava :: 11 = still lava :: 46 = TNT :: 327 = lava bucket   alert:     on-placement: 10,11,46,327     on-use: 327     on-break:    blacklist:      # Which blocks should people be prevented from placing?     placement: 10,11,46,327      # Which items should people be prevented from using?     usage: 327      # Which blocks should people be prevented from breaking?     break:      # Which blocks should not be pushed by pistons?     piston:      # Which blocks should not be dispensed by dispensers     dispenser:  ############################################################ # +------------------------------------------------------+ # # |            Essentials Spawn / New Players            | # # +------------------------------------------------------+ # ############################################################  newbies:   # Should we announce to the server when someone logs in for the first time?   # If so, use this format, replacing {DISPLAYNAME} with the player name.   # If not, set to ''   #announce-format: ''   announce-format: '&cWelcome &e&l{DISPLAYNAME}&c to the &8R&7e&8t&7r&8o&4-&cFactions server!'    # When we spawn for the first time, which spawnpoint do we use?   # Set to ""none"" if you want to use the spawn point of the world.   spawnpoint: newbies    # Do we want to give users anything on first join? Set to '' to disable   # This kit will be given regardless of cost, and permissions.   #kit: ''   kit: join  # Set this to lowest, if you want Multiverse to handle the respawning. # Set this to high, if you want EssentialsSpawn to handle the respawning. # Set this to highest, if you want to force EssentialsSpawn to handle the respawning. respawn-listener-priority: high  # When users die, should they respawn at their first home or bed, instead of the spawnpoint? respawn-at-home: false  # End of File <-- No seriously, you're done with configuration.",3,0,3,location+request+weather,GitHub
7,weather,https://github.com/casiocompa/weather.git,Simple weather client app. Used yahoo weather API Request + JSON codable + Core Location -> Core Data.,2,0,2,location+request+weather+core-data+swift+api-request+yahoo-weather-api+json-codable+core-location+groot,GitHub
8,weather-app,https://github.com/george-swift/weather-app.git,The weather app provides a detailed meteorological report for a user's city or desired location. It uses the Open Weather API to provide requested data. Built with Javascript ES6/7 and BootStrap. Bundled with Webpack,2,0,2,location+request+weather+javascript+webpack+apis+jest+bootstrap5+weather,GitHub
9,Weather-iOS-App,https://github.com/gsloup/Weather-iOS-App.git,"Requests user's location data and uses GPS data to send requests to a weather API, then use the specific API JSON data to give temperature and change a picture on the UI to the weather pattern (e.g. sunny, cloudy, rainy, etc.)",2,0,2,location+request+weather,GitHub
10,Weather-App,https://github.com/himaldahal/Weather-App.git,"This weather app made using HTML, Jquery, and Bootstrap. This is ready to use script but I recommend you to use your own API. I have subscribed to a free API.So it doesn't allow many more requests than a paid one. Although, You can access current weather data for any location including over 200,000 cities.  You can get Your own API from https://openweathermap.org/price  You can modify and distribute it.",2,0,2,location+request+weather+weather-app+weatherapp-javascript+weatherapp-jquery+web-weather+web-application+weather+bootstrap+jquery+html+website+weater,GitHub
11,WeatherMap,https://github.com/Ramachandru/WeatherMap.git,"I have created the application fetching location from server as given URL and exposing way of developing the app as below,  1 Here I have used Databinding for the views and designing the work manager to fetching the data from server every 2 hours as periodically get the data. 2.Starting the workmanager schedule When click the “GET WEATHER” button 3.triggering the request Inside the dowork in Workmanager.Once I get the data from server as weather object from response body, then updating the UI 4.Here I am using retrofit http Client for the network and getting data. 5.Once done the request, the status of the work going to be updated in Activity.  Note:I have used other Sample API for getting the data in this app.because this api url is not working for me.",2,0,2,location+request+weather,GitHub
12,Weather-app,https://github.com/Vtrrix/Weather-app.git,An application that provides information about the weather of a the requested location.,1,1,1,location+request+weather+hacktoberfest+hacktoberfest2020,GitHub
13,WeatherApp-Flutter,https://github.com/Ben-23/WeatherApp-Flutter.git,A weather app made with flutter which uses HTTP requests and Geo location.,1,0,1,location+request+weather,GitHub
14,Redux-WeatherApp,https://github.com/DineshBabu1989/Redux-WeatherApp.git,"The project implements a react-redux weather application which implements async actions in redux using redux-promise middleware.The app makes api requests to an open api and returns weather data and location details which is stored in reducers as state and displayed in the form of charts and maps.The location entry has be made in 2 fields ""city field"" and a country field which takes in the country code in iso format""",1,2,1,location+request+weather,GitHub
15,Node-js-weather-website,https://github.com/itscharanp/Node-js-weather-website.git,"Created a simple weather website using Node.js, Express, and Axios for submitting an API request to Weather Stack and MapQuest to retrieve location information and the current weather, respectively | Visit the Heroku link",1,0,1,location+request+weather,GitHub
16,WeatherApp,https://github.com/ns71096/WeatherApp.git,This Application Fetches the Fine Location using GPS Provider and then weather for current location is fetched using weather API. Library that is used for handling network requests is AsyncHttpClient by James Smith. Also user has choice to get The Weather for particular location by setting the name of the city.,1,0,1,location+request+weather,GitHub
17,weather-app,https://github.com/MattHofmann/weather-app.git,"A weather app which is, based on the Location of the user, parsing JSON data from the Openweathermap API. Get request with Alamofire. (iOS10,Swift3)",1,0,1,location+request+weather,GitHub
18,Weater-Applicaton,https://github.com/muhammedkarakul/Weater-Applicaton.git,"This application made for iPhone with Swift 4. When you open app, it's give you your location weather forecast. You can request other cities weather forecast if you wish. ",1,0,1,location+request+weather,GitHub
19,Breezy,https://github.com/Martinmbiro/Breezy.git,"A sample weather app that displays current weather for a hard-coded location (for now) at the time of request. It is built on the MVVM design pattern, and tries to apply best programming practices.",1,0,1,location+request+weather,GitHub
20,weather-rest-service,https://github.com/HGusic/weather-rest-service.git,Software that displays accurate weather results to the user for any location in the country. The application makes web requests to receive data from the RESTful APIs of TWC.,1,0,1,location+request+weather,GitHub
21,API_CITIES_INFO,https://github.com/prabhat50ranjan/API_CITIES_INFO.git,"API developed using Node.js ,Express.js ,Mongoose ,MongoDB through which we can access information about various cities such as their location ,weather conditions,tourist places and travel services in a city.Users can get requests,post request,update requests,delete the records.",1,0,1,location+request+weather,GitHub
22,A-smartwatch-based-on-esp8266-with-MicroPython,https://github.com/Green077/A-smartwatch-based-on-esp8266-with-MicroPython.git,"It's a project combined with hardware and software, the goal is to make a smart watch based on esp8266 chip. The smart watch has so many features such as time display, alarm, brightness adjustment, text scrolling, weather display, voice control and gesture recognition:. The first five features time display, alarm alert, brightness adjustment and text scrolling are based on the local programming. The basic idea for these is to check the document for esp8266, getting to know how to set up the circuit, how to get the real time, how to control the OLED screen, bus, light sensors etc. The last three features mainly depends on the cloud coding, and are all based on the Client/server architecture. For Weather Display, esp8266 severed as a client. A connection was built by Google Geolocation API between the smart watch(client) and Google Weather Service Server(server). Send the JSON string including location information to the server and get the weather information back.  For Voice Control, esp8266 was configured as a server by ngrok and an Android application was used as the client. This app aims to transfer voice signal into text commands by Google Speech API. Connected the app(client) to the smart watch(server) by HTTP request, and used translated commands to control the smart watch.  For gesture recognition, esp8266 was client and server was the EC2 Linux instance set up in AWS. In order to teach the smart watch to identify gestures, both the training and predicting process needs to be done. Mongodb is used to keep the large amount of data from accelerometer training. SVM model is selected to do the training, the data for the same gesture was labeled. After training, if someone is holding the smart watch and moving it in some preset gestures, the smart watch could map these data from the accelerometer into a specific gesture. The final recognition accuracy is 98%.",1,1,1,location+request+weather,GitHub
23,weather,https://github.com/Acovid/weather.git,Shows weather at requested location,0,0,0,location+request+weather,GitHub
24,localweather,https://github.com/dmoneyballer/localweather.git,a weather app that gets weather after requesting your location.,0,0,0,location+request+weather,GitHub
25,ohweather,https://github.com/5tupidbrain/ohweather.git,Website which display weather information for any requested location ☁.,0,0,0,location+request+weather+react+weather-app+weather-information+weather+weatherapp+create-react-app,GitHub
26,weather-app-flutter,https://github.com/mellowcello77/weather-app-flutter.git,Flutter App Gets Location and Request Weather From API,0,0,0,location+request+weather,GitHub
27,node-Forecast-App,https://github.com/sidjain01/node-Forecast-App.git,Get the weather forecast details for requested location.,0,0,0,location+request+weather,GitHub
28,LocWeather,https://github.com/mzhang0/LocWeather.git,iOS app to obtain current weather information for requested locations.,0,0,0,location+request+weather,GitHub
29,weatherAPI,https://github.com/thakrisp/weatherAPI.git,looks up the weather on a user requested location.,0,0,0,location+request+weather,GitHub
30,zipcode-weather,https://github.com/erdembircan/zipcode-weather.git,Weather app with zip-code for location request,0,0,0,location+request+weather,GitHub
31,Weather,https://github.com/PriyankaDevraj/Weather.git,Simple application to forward weather request based on location to a weather website.,0,0,0,location+request+weather,GitHub
32,WeatherApp,https://github.com/berxlebe/WeatherApp.git,Application that displays the local weather or weather of a requested location,0,0,0,location+request+weather,GitHub
33,WeatherApp,https://github.com/MegzzGit/WeatherApp.git,"Avenger themed weather App, uses GPS location to request current and forecasted weather details.",0,0,0,location+request+weather,GitHub
34,MyWeather,https://github.com/juhigupta001/MyWeather.git,Android Weather App using location of the device and building Retrofit request to Open weather map.,0,0,0,location+request+weather,GitHub
35,Clima,https://github.com/Jaronce/Clima.git,"My First API Request Weather App, Shows your current location's weather or search a city name's weather",0,0,0,location+request+weather,GitHub
36,weather-ninja,https://github.com/terrifricker/weather-ninja.git,"A weather widget that requests data from a weather api based on location entered, then displays the data.",0,0,0,location+request+weather,GitHub
37,Clima-Android,https://github.com/Cena96/Clima-Android.git,"Shows Weather of different cities, I have used JSON and weather API to get the http requests and access location.",0,0,0,location+request+weather,GitHub
38,Weatherapp,https://github.com/tsarraff/Weatherapp.git,Gets the weather of different locations using weather api. Uses a rest framework to handle the different https requests.,0,0,0,location+request+weather,GitHub
39,agro-info,https://github.com/ioanzicu/agro-info.git,An app which gives you data about weather by requested location.,0,0,0,location+request+weather,GitHub
40,weather-website,https://github.com/raghavkhator/weather-website.git,Website to find weather of an entered Location using API requests.,0,0,0,location+request+weather,GitHub
41,weather-app,https://github.com/SimranKhokkar/weather-app.git,An asynchronous weather application using google geo location API using http requests. ,0,0,0,location+request+weather,GitHub
42,ChatBotEngine,https://github.com/franzparks/ChatBotEngine.git,A chatbot engine for responding to weather requests for a given location,0,0,0,location+request+weather,GitHub
43,bootstrap-weather-app,https://github.com/alfielytorres/bootstrap-weather-app.git,A simple website that displays the weather of any user requested location,0,0,0,location+request+weather+nodejs+heroku,GitHub
44,Weather_App,https://github.com/thegamer1907/Weather_App.git,"A simple app written in Node JS, which tells the real time weather of requested location",0,0,0,location+request+weather,GitHub
45,Weather-App,https://github.com/alastairtooth/Weather-App.git,An Dark/Light mode app that provides weather data based off current or requested locations.,0,0,0,location+request+weather,GitHub
46,Clima,https://github.com/shalkovy/Clima.git,"Weather app which uses Alamofire requests, SwiftyJSON to parse the information and Core Location to locate",0,0,0,location+request+weather,GitHub
47,weatherApp,https://github.com/kshitijgandhi95/weatherApp.git,Takes a get request and responds with location and weather information,0,0,0,location+request+weather,GitHub
48,PyWeather,https://github.com/kayannr/PyWeather.git,Python API Requests & JSON Traversals To Visualize the Weather of 500+ Locations,0,0,0,location+request+weather,GitHub
49,node-weather-app,https://github.com/fuzzylogicxx/node-weather-app.git,A Node app which asynchronously requests and displays weather forecasts for the user’s location.,0,0,0,location+request+weather,GitHub
50,location,https://github.com/mxlje/location.git,Grabs my current location from a Dropbox file and requests weather information via forecast.io,0,0,0,location+request+weather,GitHub
51,weatherapp,https://github.com/gn-04/weatherapp.git,retrieves weather data from user specified location using async fetch requests,0,0,0,location+request+weather,GitHub
52,gtm-geolocation-weather,https://github.com/marekcech/gtm-geolocation-weather.git,GTM script for geolocation of visitor and for requestion weather in his location.,0,0,0,location+request+weather,GitHub
53,weather-dashboard,https://github.com/tonyschwebach/weather-dashboard.git,Displays current weather conditions and the 5 day forecast user requested locations,0,0,0,location+request+weather,GitHub
54,weather_app,https://github.com/DoubleBridges/weather_app.git,Simple flutter weather app using native location API's and http requests,0,0,0,location+request+weather,GitHub
55,open-weather-rest-app,https://github.com/mateuszstopyra/open-weather-rest-app.git,Rest App to register and manage weather parameters for requested locations.,0,0,0,location+request+weather,GitHub
56,Weather-API-using-Node.js,https://github.com/kishorekumarhanbar/Weather-API-using-Node.js.git,A weather API which displays weather for a particular location if provided or displays it for the current location. requires the installation of yargs & request npm modules The application makes use of callbacks & Promises to fetch the location & weather. The app makes requests to following sites to fetch useful data. for weather information : http://api.openweathermap.org for current location: 'http://ipinfo.io',0,0,0,location+request+weather,GitHub
57,SimpleWeather,https://github.com/alexbusol/SimpleWeather.git,"A weather app that can detect user's location and show the current weather, along with some custom messages for each weather condition. The user can also request weather for a different location.",0,0,0,location+request+weather,GitHub
58,RASA-Weather-Bot,https://github.com/Bharathi-A-7/RASA-Weather-Bot.git,A Weather bot built using RASA NLU framework that requests for Weather data of a given location from Apixu Weather API,0,0,0,location+request+weather,GitHub
59,WeatherApp-using-Node.js,https://github.com/PARIKSHIT152/WeatherApp-using-Node.js.git,To predict the real world weather information by fetching from Google geo location API to take location information and Forecast API to predict weather informartion of a location using asynchronous Http request.,0,0,0,location+request+weather,GitHub
60,WeatherApp,https://github.com/ManvaP/WeatherApp.git,A basic webpage which requests a user's location to find the weather of the user's area,0,0,0,location+request+weather,GitHub
61,Weather-iOS-App,https://github.com/sgolds/Weather-iOS-App.git,iOS app that returns the weather and forecast for the user's location using AlamoFire for REST and Web Requests,0,0,0,location+request+weather,GitHub
62,nlp-test,https://github.com/wramirez09/nlp-test.git,"a small bot that uses natural language processing via Wit.ai to complete request for news, sports, weather and locations",0,0,0,location+request+weather+node+api+wit,GitHub
63,weather-app,https://github.com/mike1234-pixel/weather-app.git,This express application makes a call to the OpenWeather API to retrieve weather data for the user's requested location.,0,0,0,location+request+weather+nodejs+express+third-party-api,GitHub
64,BasicWeatherQuery,https://github.com/jzkarap/BasicWeatherQuery.git,A simple console app for querying weather... Can detect current location or take a user's request,0,0,0,location+request+weather,GitHub
65,poncho,https://github.com/twoesplease/poncho.git,A go app that will let you know what the weather is doing in a requested location,0,0,0,location+request+weather,GitHub
66,Weather_Wonder,https://github.com/camscoderepo/Weather_Wonder.git,A simple Regex bot that takes a response from the user and shows them the weather at the requested location.,0,0,0,location+request+weather,GitHub
67,Weather-Forecast,https://github.com/aakriti1/Weather-Forecast.git,This project shows weather forecast of current location. All request managed by WorkManager after a specific duration of time.,0,0,0,location+request+weather,GitHub
68,urbanSun,https://github.com/mikezalik/urbanSun.git,"Uses openweathermap API to provide location based, current weather updates. Used JQuery for AJAX request and JSON parse.",0,0,0,location+request+weather,GitHub
69,surf-forecast,https://github.com/Valeriechristinemarieanne/surf-forecast.git,A web app that provides location-based weather and marine data via API requests to stormglass.io. ,0,0,0,location+request+weather,GitHub
70,Weather-App,https://github.com/haoranguovictor/Weather-App.git,Useful android weather app. Initially request for local weather data. Supports querying for different locations. Based on android studio(java) and OpenWeatherMap api.,0,0,0,location+request+weather,GitHub
71,weather_app,https://github.com/ColeTistan/weather_app.git,This is a weather app that uses the OpenWeather API to request what the current weather is in the specified location entered in the user input. ,0,0,0,location+request+weather,GitHub
72,weather-app,https://github.com/dondasasmita/weather-app.git,a weather application that displays the current weather of a given location by making asynchronous HTTP requests from 2 APIs written in NodeJS.    ,0,0,0,location+request+weather,GitHub
73,WeatherInfo,https://github.com/Arthur4718/WeatherInfo.git,"Search and displays weather info for the user. Using his current location an by searching an location. Applies MVC concepts, HTTP requests and how to hande JSON Exceptions.",0,0,0,location+request+weather,GitHub
74,weatherApp,https://github.com/CalSchmitt/weatherApp.git,"A weather app that uses OpenWeatherMap API to fetch location, weather, humidity, pressure, and wind speed of a specific city. It saves the users request to local storage. ",0,0,0,location+request+weather,GitHub
75,FCC-Show-the-Local-Weather,https://github.com/cojamalo/FCC-Show-the-Local-Weather.git,This project features AJAX requests to Dark Sky's weather API. It also uses the user's location info to find the local weather. Formatted for mobile use.,0,0,0,location+request+weather,GitHub
76,weather-app,https://github.com/AMGOcyber123/weather-app.git,First node js project using simple FETCH() request to use the location provided by the user to generate the weather forecast of that location ,0,0,0,location+request+weather,GitHub
77,Vue-Weather-App,https://github.com/SpecTEviL/Vue-Weather-App.git,This is a weather app built with Vue.js3 and OpenWeatherMap API. It shows the weather of any location requested by the user.,0,0,0,location+request+weather+vue3+weather+weatherapi,GitHub
78,clime,https://github.com/minal2909/clime.git,"A beautiful weather application. Fetching weather releted data from openweathermap.org via requesting online server and build user friendly weather application, to check current weather condition, temperature and description of specified location.",0,0,0,location+request+weather,GitHub
79,Flask-Weather-Web-App,https://github.com/debjit31/Flask-Weather-Web-App.git,A minimalistic web application using Flask at backend to get the weather of a location entered by the user. The application uses the OpenWeatherMap API to make http requests o get the weather data of a particular location.,0,0,0,location+request+weather,GitHub
80,ColdOrHot,https://github.com/ArakelyanEdgar/ColdOrHot.git,Finds the weather in the inputted area by requesting your latitude and longitude from Google Geocode API and then makes a request to DarkSky's API for the weather at the location.,0,0,0,location+request+weather,GitHub
81,WeatherAPP,https://github.com/krishnadavuluri/WeatherAPP.git,A Website which request API for weather data and displays the weather report of any city searched by the user and by default also displays weather report of users location.,0,0,0,location+request+weather,GitHub
82,Tempo,https://github.com/ivangeier/Tempo.git,Tempo is an App that request weather data from API. You can search the weather from any city in the world or just use or location to check the weather!,0,0,0,location+request+weather,GitHub
83,Weather-APP-Android-,https://github.com/alomarisf/Weather-APP-Android-.git,Android Weather app that requests JSON data from the web and display a real time temperature to the user based on his Location ,0,0,0,location+request+weather,GitHub
84,clima-app,https://github.com/senaybee/clima-app.git,Flutter app that displays weather of any requested location using OpenWeatherMap APIs and HTTP GET calls. Completed as part of Flutter Bootcamp.,0,0,0,location+request+weather,GitHub
85,Weather-Status,https://github.com/ErdemStar/Weather-Status.git,This script'll take your ip address from HTTP GET request for try to learn IP location then show you weather forecast,0,0,0,location+request+weather,GitHub
86,node-weather-sever,https://github.com/1divya/node-weather-sever.git,A Node server which responds to your http request and send back weather for a location you have sent in the URL,0,0,0,location+request+weather,GitHub
87,Weather-radar,https://github.com/Francisco-Webdeveloper/Weather-radar.git,Projet where the users will request the weather conditions in their current location or in any city. Use of AJAX to fetch API (OpenWeatherMap),0,0,0,location+request+weather+openweathermap-api+javascript+es6+ajax+fetch-api+weather-app,GitHub
88,Python-Api-Challenge,https://github.com/cjbeimfohr13/Python-Api-Challenge.git,"Homework assignment using python requests, apis and JSON traversals to explore weather in different location around the world to find the optimal vacation spot.",0,0,0,location+request+weather,GitHub
89,MKRGSM_Utilities,https://github.com/HA4ever37/MKRGSM_Utilities.git,"Using Arduino MKR GSM 1400 to view location info and weather info, send GET requests, serial Passthrough, and deep-sleep timer",0,0,0,location+request+weather+gsm+sara-u201+arduino+mkr1400gsm+samd21+weather-information+weatherinfo+deepsleep-mode+gprs+3g+mkrgsm1400+low-power+http-get+location-services+datetime,GitHub
90,WeatherApp,https://github.com/evgeniagaletskaya/WeatherApp.git,"In this app you can detect your location and check the weather in your region. Also, you can see the history of your requests.",0,0,0,location+request+weather,GitHub
91,What_to_Wear,https://github.com/rockywng/What_to_Wear.git,Uses the OpenWeatherMap API and the requests Python HTTP library to fetch live weather data and create a suggestion for clothing to wear based on location.,0,0,0,location+request+weather,GitHub
92,NextTask,https://github.com/SaienkoDmytro/NextTask.git,"A small project with a Weather application base. Check location, send get request by Retrofit for actual weather for this location and fulfill recyclers with it. The realization was made only for main functions to check Retrofit get requests and MVP pattern.",0,0,0,location+request+weather,GitHub
93,weatherman,https://github.com/juniorjavadeveloper-pl/weatherman.git,"User enters/requests Location e.g. Warsaw, app retreives Weather Data from external API e.g. OpenWeatherApi and stores Location request along with collected weather data in database - technologies: Java, CLI, Hibernate, OkHttp3, JUnit 5, H2Database; architecture, three layers Java Monolith: Controller, Service, Mapper, Dao.",0,0,0,location+request+weather,GitHub
94,btkweathers,https://github.com/Billykat7/btkweathers.git,"Weather API. Locally running RESTful web API django-rest-framework recommended, though not necessary that accepts a request with 'city' and 'period' args fetches weather data for that location and period of time from some public API",0,0,0,location+request+weather,GitHub
95,weather-app,https://github.com/crisbnp/weather-app.git,Weather App. Making HTTP requests from Node. Fetching real-time weather data using Dark Sky API and integrate a geocoding API called Mapbox API to feed in the latitude and longitude of queried location.,0,0,0,location+request+weather,GitHub
96,-Weather-Forecast-client-app-using-framework-,https://github.com/parthivis/-Weather-Forecast-client-app-using-framework-.git,A client-side app using React framework that request weather forecast data from Open Weather API and display the forecast for next five days for a location chosen by users. ,0,0,0,location+request+weather,GitHub
97,Weather,https://github.com/AlekseevArtem/Weather.git,"This is my project ""Weather"". It's shows the weather from a location which it receives from GPS. Makes a request to the service https://openweathermap.org/api using Retrofit",0,0,0,location+request+weather,GitHub
98,Weather-App,https://github.com/DubbleJay/Weather-App.git,"A weather app that uses the OpenWeatherMapApi to get the current weather, hourly forecast, and weekly forecast from a city based on the user's current location or from a city requested by the user.",0,0,0,location+request+weather,GitHub
99,ShineNRain,https://github.com/ABahadori156/ShineNRain.git,Weather app that works with the API from openweathermap.org. This app uses Alamofire for the HTTP request and parse through the JSON of the geographic location from the coordinates to get the weather information from that region.,0,0,0,location+request+weather,GitHub
100,Weather-Report,https://github.com/Sachin-Upadhyay/Weather-Report.git,"In this application, We will request open weather map API to give current location weather report with Json format and we will parse these things. we use volley to hit api.",0,0,0,location+request+weather,GitHub
101,Travel-App-Capstone-Project-Udacity,https://github.com/richbm10/Travel-App-Capstone-Project-Udacity.git,"Travel Web Application for planning different trips that can have locations from any part of the world by requesting different external APIs to retrieve the following data: current and forecast weather, images, country, and more data of a given location.",0,0,0,location+request+weather+api+microservices+webpack+nodejs+es6-javascript+html5+css3+express,GitHub
102,weatherly-WeatherApp,https://github.com/Ladav/weatherly-WeatherApp.git,"Weatherly is a web Application for weather forecast, developed using REACT js and NODE js,  it provide user's with hourly and daily forecast data for a request location. Powered by DARK SKY API and MAPBOX API.",0,0,0,location+request+weather,GitHub
103,localWeatherApp,https://github.com/AviTapp/localWeatherApp.git,"An app that requests the user's location on load, then plugs the given longitude and latitude into an API from Weather Underground to pull weather data regarding current conditions as well as the three day forecast.",0,1,0,location+request+weather,GitHub
104,Weather-App,https://github.com/DanielCochavi/Weather-App.git,This weather app alerts you if it is raining now from any location in the world. Using HTTP requests to get the recent data from 3 common weather APIs.,0,0,0,location+request+weather,GitHub
105,React-Weather-App,https://github.com/loetek/React-Weather-App.git,A super small app that allows you to get the current weather based on requested location using a Weather API. This is just an app to test some React components and principals learned.,0,0,0,location+request+weather,GitHub
106,forecast_app,https://github.com/ryandawkes7/forecast_app.git,"This Weather Forecast app allows the user to retrieve weather data for a specified location. This explores the use of APIs, HTTP requests with the fetch() method and more with Node JS and Handlebars.",0,0,0,location+request+weather,GitHub
107,wanderlust,https://github.com/sisilhowie99/wanderlust.git,"A Codecademy project for HTTP request, working with Foursquare and OpenWeather APIs to simulate a web-app to check weather of a location and returns popular landmarks/places of input location",0,0,0,location+request+weather+http+api+apis,GitHub
108,weatherapi,https://github.com/Marcode777/weatherapi.git,This app uses AJAX and jQuery to access an API to get/request weather conditions and data from wunderground to give weather updates for certain locations ( in this case New York City). ,0,0,0,location+request+weather,GitHub
109,http-server,https://github.com/4Aray2/http-server.git,- Weather service. Returns weather information by city code. Accept parameter in a query string. - Geo-location service. One of the available functions – returning time zone by ZIP. Accept request in POST body.,0,0,0,location+request+weather,GitHub
110,Flutter_WeatherForecastApp,https://github.com/vmutlu/Flutter_WeatherForecastApp.git,"It is a weather application developed using the api.openweathermap.org weather api. When you install the application on your phone, you will first be asked for permission to share location, then send a request to the API with the latitude and longitude data of your location, weather forecast, etc. will display the data on the screen. An example is flutter work.",0,0,0,location+request+weather,GitHub
111,Weather_App,https://github.com/titus711/Weather_App.git,"An android weather application in Java to show weather in my current location and ten other different european locations. The Weather application is based on a request to the OpenWeatherMap's API using the Volley Library. Base URL = ""https://api.openweathermap.org/data/2.5/""",0,0,0,location+request+weather+java+volley-library,GitHub
112,Live-Weather,https://github.com/jahidulhasanzahid/Live-Weather.git,"This example displays severe weather alerts for the city of Chicago. Severe weather alerts be requested by setting the product parameter to alerts, and setting the name parameter to the required location in the request URL. If no severe weather alerts are present, the API returns an empty array in the alerts attribute of the JSON response.",0,0,0,location+request+weather+here+weather-api+weather-forecast+laravel6+php+html+css+javascript,GitHub
113,Weather-App,https://github.com/rdanishraza/Weather-App.git,"The goal of this Application that user simply request on browser to know the weather along with the location. The User put the location and click on the button and he/she will be able to see the weather report. Application is designed in JavaScript, CSS and Handlebars",0,0,0,location+request+weather,GitHub
114,Weather-Application,https://github.com/Smit-Kakadiya/Weather-Application.git,"I have developed web based application which depicts free weather information of the location you type in textbox. Also, the AccuWeather API has been implemented in order to view temperature and weather information of the particular location. The AccuWeather API used here is the free version. Due to this reason, only 50 requests per day can be made using the API Key.",0,0,0,location+request+weather+html+css+javascript+accuweather-api,GitHub
115,Clima,https://github.com/Priyanka72/Clima.git,Clima Weather App Clima Weather App Use URLSession to network and make HTTP requests. Parses JSON with the native Encodable and Decodable protocols. Uses Grand Central Dispatch to fetch the main thread. Uses Core Location to get the current location from the phone GPS.,0,0,0,location+request+weather,GitHub
116,weather_info_to_email,https://github.com/petersun825/weather_info_to_email.git,Python script that converts location into longitude and latitude coordinates and send an API request for weather information at the locations.  Then it parses the information from the API and logs into an email account to send the email to the recipients.  Can handle multiple locations and recipients.,0,0,0,location+request+weather,GitHub
117,sweater_weather,https://github.com/tfielder/sweater_weather.git,"This is the back-end rails project for sweater weather. This API is intended to be consumed by the Sweater Weather Front End project. It creates APIs with the following URIs: /api/v1/users /api/v1/location? /api/v1/sessions /api/v1/favorites /api/v1/forecast /api/v1/gifs. This project also makes requests to the Google API for location information, Dark Sky API for weather forecast information, and Flickr for photos.",0,0,0,location+request+weather,GitHub
118,skytunes-frontend,https://github.com/blevm/skytunes-frontend.git,React and Redux frontend for an application allowing users to request song recommendations and create a Spotify playlist based on user preferences and the current weather at a searched location.,0,0,0,location+request+weather,GitHub
119,forecast,https://github.com/bdhsu/forecast.git,"A weather app that fetches 5-day daily forecast data for any location in the US via Ajax requests to OpenWeatherMap API. Built with React, Webpack, Babel, react-router, and axios. ",0,0,0,location+request+weather,GitHub
120,meteo-app,https://github.com/romanovadrian/meteo-app.git,Meteo Web App that makes requests to the OpenWeatherMap API and asks for the permission to get your location. The data is displayed in the browser next to a image chosen corresponding to the weather,0,0,0,location+request+weather,GitHub
121,telebot_weathers,https://github.com/Dolgopolovww/telebot_weathers.git,Телеграм бот который запрашивает разрешение к вашей геопозиции и возвращает погоду в вашем месте. Telegram bot that requests permission to your geo-location and returns the weather in your place.,0,0,0,location+request+weather,GitHub
122,weather-application,https://github.com/micahdisney/weather-application.git,Interactive weather map that displays a 3 day forecast using AJAX requests sent to GoogleMaps and openweathermap.org APIs. User can drag and drop pin on map to retrieve forecast for desired location.,0,0,0,location+request+weather,GitHub
123,NodeJS_WeatherApp,https://github.com/patilankita79/NodeJS_WeatherApp.git,This is a command line interface (CLI) weather app built in Node.js which makes use of asynchronous HTTP requests. This is asynchronous and non-blocking application which makes use of Google's geo-location API and dark sky API,0,0,0,location+request+weather+nodejs+google-geolocation+darksky-api+asynchronous+promise,GitHub
124,MODULE_Metar_Info,https://github.com/OpenRepeater/MODULE_Metar_Info.git,"The metar information module is used to get METAR (weather) information from ICAO locations, usually airports, and announces them over the air. You can request a METAR from an airport of your interest.",0,0,0,location+request+weather,GitHub
125,Weatherman,https://github.com/mwiraszka/Weatherman.git,Weatherman is a SPA built using Angular CLI and deployed to Vercel. The app retrieves the current weather for any inputted location through requests to OpenWeatherMap and GeoNames' APIs and features a fully-responsive frontend design.,0,0,0,location+request+weather+angular-cli+vercel-now+openweathermap-api+angular-material+geonames-api+pa11y,GitHub
126,Weather-Client-Using-XML,https://github.com/DeepakVargheseGit/Weather-Client-Using-XML.git,"Created a client application that will connect to the National Weather Service web site using HTTP and XML and/or SOAP and display current weather conditions. Your client process will connect to the server over a socket connection and request weather information for a certain location. The National Weather Service specifies the location using latitude and longitude instead of zip code. The user should be able to enter coordinates into the client program and get a current update for that location. This service is only updated hourly, so you should not request updates at short intervals. You should have a manual refresh button that will reconnect and retrieve the information again Include at least four of the following variables in your display: Maximum Temperature, Minimum Temperature, Dew point Temperature, 12 Hour Probability of Precipitation, Cloud Cover Amount, Wind Speed, Wind Direction, Weather Icons, Wave Height.",0,0,0,location+request+weather,GitHub
127,weather-map,https://github.com/nayokim/weather-map.git,A web application written with JavaScript and using jQuery to integrate two separate APIs (Open Weather Map and Mapbox) to work in conjunction to give a 5-day weather forecast and location on a map. This is completed by using AJAX requests based on user input. Sole contributor to this project.,0,0,0,location+request+weather,GitHub
128,weather-app-node.js,https://github.com/harshitsinghai77/weather-app-node.js.git,A weather app based on google's geo-location API and Dark Sky API to fetch real time weather data. Enter the address and the app will automatically fetch the coordinates and request the data from Dark Sky. The app has been deployed to Heroku and Microsoft Azure platforms. Heroku App: https://shadoweather.herokuapp.com/ Azure: ,0,0,0,location+request+weather,GitHub
129,shape-ai-project,https://github.com/Nataraj01/shape-ai-project.git,"import requests #import os from datetime import datetime  api_key = '87d845b0b6cf29baa1a73cc34b067a95' location = input(""Enter the city name: "")  complete_api_link = ""https://api.openweathermap.org/data/2.5/weather?q=""+location+""&appid=""+api_key api_link = requests.get(complete_api_link) api_data = api_link.json()  #create variables to store and display data temp_city = ((api_data['main']['temp']) - 273.15) weather_desc = api_data['weather'][0]['description'] hmdt = api_data['main']['humidity'] wind_spd = api_data['wind']['speed'] date_time = datetime.now().strftime(""%d %b %Y | %I:%M:%S %p"")  print (""-------------------------------------------------------------"") print (""Weather Stats for - {}  || {}"".format(location.upper(), date_time)) print (""-------------------------------------------------------------"")  print (""Current temperature is: {:.2f} deg C"".format(temp_city)) print (""Current weather desc  :"",weather_desc) print (""Current Humidity      :"",hmdt, '%') print (""Current wind speed    :"",wind_spd ,'kmph') ",0,0,0,location+request+weather,GitHub
130,cyber-security,https://github.com/Hanu23/cyber-security.git,"import requests #import os from datetime import datetime  api_key = '87d845b0b6cf29baa1a73cc34b067a95' location = input(""Enter the city name: "")  complete_api_link = ""https://api.openweathermap.org/data/2.5/weather?q=""+location+""&appid=""+api_key api_link = requests.get(complete_api_link) api_data = api_link.json()  #create variables to store and display data temp_city = ((api_data['main']['temp']) - 273.15) weather_desc = api_data['weather'][0]['description'] hmdt = api_data['main']['humidity'] wind_spd = api_data['wind']['speed'] date_time = datetime.now().strftime(""%d %b %Y | %I:%M:%S %p"")  print (""-------------------------------------------------------------"") print (""Weather Stats for - {}  || {}"".format(location.upper(), date_time)) print (""-------------------------------------------------------------"")  print (""Current temperature is: {:.2f} deg C"".format(temp_city)) print (""Current weather desc  :"",weather_desc) print (""Current Humidity      :"",hmdt, '%') print (""Current wind speed    :"",wind_spd ,'kmph')",0,0,0,location+request+weather,GitHub
131,shape-ai-project,https://github.com/Althafmu/shape-ai-project.git,"import requests #import os from datetime import datetime  api_key = '9c4c2643e31e15e21ce56ebe8d6dc1e9' location = input(""Enter the city name: "")  complete_api_link = ""https://api.openweathermap.org/data/2.5/weather?q=""+location+""&appid=""+api_key api_link = requests.get(complete_api_link) api_data = api_link.json()  #create variables to store and display data temp_city = ((api_data['main']['temp']) - 273.15) weather_desc = api_data['weather'][0]['description'] hmdt = api_data['main']['humidity'] wind_spd = api_data['wind']['speed'] date_time = datetime.now().strftime(""%d %b %Y | %I:%M:%S %p"")  print (""-------------------------------------------------------------"") print (""Weather Stats for - {}  || {}"".format(location.upper(), date_time)) print (""-------------------------------------------------------------"")  print (""Current temperature is: {:.2f} deg C"".format(temp_city)) print (""Current weather desc  :"",weather_desc) print (""Current Humidity      :"",hmdt, '%') print (""Current wind speed    :"",wind_spd ,'kmph')",0,0,0,location+request+weather,GitHub
132,weather,https://github.com/345AYUSH420/weather.git,"import requests #import os from datetime import datetime  api_key = '87d845b0b6cf29baa1a73cc34b067a95' location = input(""Enter the city name: "")  complete_api_link = ""https://api.openweathermap.org/data/2.5/weather?q=""+location+""&appid=""+api_key api_link = requests.get(complete_api_link) api_data = api_link.json()  #create variables to store and display data temp_city = ((api_data['main']['temp']) - 273.15) weather_desc = api_data['weather'][0]['description'] hmdt = api_data['main']['humidity'] wind_spd = api_data['wind']['speed'] date_time = datetime.now().strftime(""%d %b %Y | %I:%M:%S %p"")  print (""-------------------------------------------------------------"") print (""Weather Stats for - {}  || {}"".format(location.upper(), date_time)) print (""-------------------------------------------------------------"")  print (""Current temperature is: {:.2f} deg C"".format(temp_city)) print (""Current weather desc  :"",weather_desc) print (""Current Humidity      :"",hmdt, '%') print (""Current wind speed    :"",wind_spd ,'kmph') ",0,0,0,location+request+weather,GitHub
133,SkyCast,https://github.com/jamesfneyer/SkyCast.git,"This project utilizes google maps and Dark Sky api to find and display the weather information of a specified location. It shows comparisons between the temperature of the days of the week, and will soon show a comparison to previous years. Upon request, the user can see their previous requests.",0,0,0,location+request+weather,GitHub
134,React-Weather-App,https://github.com/Brednan/React-Weather-App.git,"This is another weather app I have made. However, unlike the last one this is not just a console application, it uses React. It works by you entering a location and then you submit it. Then the fetch API is called which sends a request to Open Weather Map's API and retrieves the data. Then I made it display the description of the weather as well as the temperature (in Celsius).",0,0,0,location+request+weather,GitHub
135,Weather-Forecast-Application-using-React-Redux,https://github.com/Srivatsa2393/Weather-Forecast-Application-using-React-Redux.git,"A weather application that determines the temperature, pressure, humidity for a particular location. In order to determine the weather we are using the Open weather samples API. For AJAX request we use AXIOS. This is a react-redux application and I have created a reusable component. I have used a library called react sparklines for the chart to display in the app and react google maps application for determining the cities map",0,0,0,location+request+weather,GitHub
136,weather-app,https://github.com/Gaurav367/weather-app.git,"In this project, we  have build  our very own weather app with HTML, CSS, and JavaScript. To retrieve the data, we'll be using something called an API, or an application programming interface.  Well, we're actually going to use two APIs: one to get the location of the user and another to fetch weather data based on the user's location!  To retrieve a user's location, we'll be using the Geolocation Web API to auto-detect the user's latitude and longitude. Once we have this information, we can make a request to a weather source – like OpenWeatherMap — to get weather data based on a user's location.    Now that we have our API key, we can create our files:  index.html - for our markup style.css - for styling script.js - for the function(s) to fetch data from our APIs",0,0,0,location+request+weather,GitHub
137,weather.py,https://github.com/Xrphantom/weather.py.git,"import requests #import os from datetime import datetime  api_key = '1a86b05aabcb08aec58adbf93fabdfbb' location = input("" srikaklulam "")  complete_api_link = ""https://api.openweathermap.org/data/2.5/weather?q=""+location+""&appid=""+api_key api_link = requests.get(complete_api_link) api_data = api_link.json()  #create variables to store and display data temp_city = ((api_data['main']['temp']) - 273.15) weather_desc = api_data['weather'][0]['description'] hmdt = api_data['main']['humidity'] wind_spd = api_data['wind']['speed'] date_time = datetime.now().strftime(""%d %b %Y | %I:%M:%S %p"")  print (""-------------------------------------------------------------"") print (""Weather Stats for - {}  || {}"".format(location.upper(), date_time)) print (""-------------------------------------------------------------"")  print (""Current temperature is: {:.2f} deg C"".format(temp_city)) print (""Current weather desc  :"",weather_desc) print (""Current Humidity      :"",hmdt, '%') print (""Current wind speed    :"",wind_spd ,'kmph')  print(""===================================================="")   # making a list so that i can print the info to a txt  txtlist = [temp_city,weather_desc,hmdt,wind_spd,date_time] #using open() buit-in function to write to a text file with open(""textfile.txt"" , mode= 'w' ,encoding= 'utf-8') as f :                                           #encoding = utf-8 for linux and cp1252 for win     f.write(""------------------------------------------------------------- \n "")        f.write(""Weather Stats for - {}  || {}"".format(location.upper(), date_time))     f.write(""\n ------------------------------------------------------------- \n"")     f.write(""Current temperature is: {:.2f} deg C\n"".format(txtlist[0]))          f.write(""{},{} \n"".format(""Current weather desc  :"" ,txtlist[1]))     f.write(""{},{},{} \n"".format(""Current Humidity      :"",txtlist[2],""%""))     f.write(""{},{},{} \n"".format(""Current wind speed    :"",txtlist[3],""kmph""))     f.write(""===================================================="")",0,0,0,location+request+weather,GitHub
138,weather-predicter,https://github.com/Manis99803/weather-predicter.git,"Weather Predicter App helps the user get the coordinates of a given location. Besides, this it also helps in fetching the weather details at a given place. To do so user will have to input the location names at the appropriate places in the UI. The UI is developed using JavaScript, Jquery, Ajax, HTML and CSS. Ajax is used in the frontend to make a request to the server for fetching data like latitude, longitude and weather details. The app is build following the REST paradigm",0,0,0,location+request+weather,GitHub
139,weather,https://github.com/Hennafirdous/weather.git,"import requests #import os file.write( from  import datetime  api_key = '9ea45692934185fea28e1b0d3f74a826' location = input(""enter the city name:"")  complete_api_link = ""https://api.openweathermap.org/data/2.5/weather?q=""&appid""+api_key api_link = requests.get(complete_api_link) api_data = api_link.json()  #create variables to store and display data temp_city = ((api_data['main']['temp'])-273.15) weather_desc = api_data['weather'][0]['description'] hmdt = api_data['wind']['speed'] date_time = datetime.now().strftime(""%d   %b  %Y  |  %I:%M:%S   %p"")  print(""-------------------------------------------------"") print(""weather starts for - {}  ||  {} "".format(location.upper(),date_time)) print(""-------------------------------------------------"")  print(""current temperature is: {:.2f} deg C"".format(temp_city)) print(""current weather desc :"",weather_desc) print(""current humidity:"",hmdt, '%') print(""current wind speed:"",wind_spd, 'kmph')) file.close()",0,0,0,location+request+weather,GitHub
140,MapChat,https://github.com/rohitkpa/MapChat.git,"This program allows users to send text messages to a host email, which analyzes the content and fulfills the user's request. We currently have four main functionalities: Address, Directions, Elevation, and Weather. Address stores the current location of a user, indexed by their phone number. Directions returns the steps to arrive at a specified destination address, using the current location as a starting point. Elevation returns the how high a specified address is above sea level. Weather returns the weather conditions and temperature (celsius) at a specified address.",0,0,0,location+request+weather,GitHub
141,shapeai-project,https://github.com/Hennafirdous/shapeai-project.git,"import requests #import os file.write( from datetime import datetime  api_key = '○9ea45692934185fea28c1b0d3f74a826' location = input(""Enter the city name:"")  complete_api_link = ""https://api.openweathermap.org/data/2.5/weather?q=""&appid=""+api_key api_link = requests.get(complete_api_link) api_data = api_link.json()  #create variables to store and display data temp_city = ((api_data['main']['temp'])-273.15) weather_desc = api_data['weather'][0]['description'] hmdt = api_data['main']['humidity'] wind_spd = api_data['wind']['speed'] date_time = datetime.now().strftime(""%d %b %Y | %I:%M:%S %p"")  print(""--------------------------------------------"") print(""weather stats for - {} || {}"".format(location.upper(),date_time)) print(""--------------------------------------------"")  print(""current temperature is: {:.2f} deg C"".format(temp_city)) print(""current weather desc:"",weather_desc) print(""current humidity:"",hmdt, '%') print(""current wind speed:"",wind_spd,'kmph')) file.close()",0,0,0,location+request+weather,GitHub
142,shape_Ai_project_Vishakha_goyal,https://github.com/vishakha-goyal/shape_Ai_project_Vishakha_goyal.git,"import requests import os from datetime import datetime userAPI = ""0f2585f6544ef75a6f06304e1ecc1b8d""  location = input(""Enter The City Name :- "")   completeAPIlink = ""https://api.openweathermap.org/data/2.5/weather?q={}&appid={}"" api_link = requests.get(completeAPIlink) api_data = api_link.json()   if api_data[""cod""] == ""404"":   print(""Invalid City :- {}, Please check your city name"".format(location)) else:   temp_city = ((api_data [""main ""]['temp'])-273.15)      wethr_des = api_data['weather'][0][' description ']      humdt = api_data[""main""]['humidity']      wind_spd = api_data['wind']['speed']      date_time = datetime.now().strftime(""%d %b %Y | %I:%M %S %p"")      print(""-------------------------------------------------------------------"")   print(""Weather Starts for - {} || {}"".format(location.upper(), date_time))   print(""-------------------------------------------------------------------"")      print(""Current Temperature is : { :.2f} deg C"".format(temp_city))      print(""Current Weather Description :- "", wether_des)      print(""Current Humidity :- "", humdt , '%')      print(""Current Wind Speed :- "", wind_spd, 'kmph')          f = open(""api_data"", 'w')   ",0,0,0,location+request+weather,GitHub
143,shapeaiproject,https://github.com/shihab2000/shapeaiproject.git,"import requests   from datetime import datetime   api_key='fa766ad2df19558f80ac998a4f5cbf45'     location=input(""Enter the city name:"")   complete_api_link=""https://api.openweathermap.org/data/2.5/weather?q=""+location+""&appid=""+api_key   api_link=requests.get(complete_api_link) api_data=api_link.json()   #create variables to store and display data temp_city=((api_data['main']['temp'])-273.15) weather_desc=api_data['weather'][0]['description'] hmdt=api_data['main']['humidity'] Wind_spd=api_data['wind']['speed'] date_time=datetime.now().strftime(""%d %b %Y | %I:%M:%S %p"")   print(""-----------------------------------------------------"") print(""Weather Stats for - {} || {}"".format(location.upper(),date_time)) print(""-----------------------------------------------------"")     print (""Current temperature is : {:.2f} deg C"".format(temp_city)) print(""Current weather desc :"",weather_desc) print(""current Humidity     :"",hmdt,'%') print(""Current wind speed   :"",Wind_spd,'kmph')       text_file=open(""weather_file.txt"",""a+"") text_file.write(""\ntemperature:""+str(temp_city)) text_file.write(""\nweather_dec:""+str(weather_desc)) text_file.write(""\nHumidity:""+str(hmdt)) text_file.write(""\nwind_spd:""+str(Wind_spd)) text_file.write(""\ndate_time:""+str(date_time))     text_file.close() text_file=open(""weather_file.txt"",""r"") print(""\ndata from text file\n"") print(text_file.read()) print() text_file.close()",0,0,0,location+request+weather,GitHub
144,richbm10hub.io,https://github.com/richbm10/richbm10.github.io.git,"This web application consists in a weather journal for the current weather of a specific location using an ISO country code and ZIP code. The weather information is obtained by requesting it from the Open Weather Map API ( https://openweathermap.org/api ). The basic content that is displayed is the temperature, and the timezone date and hour of the location. Besides, depending on the data from the response of the API, there is other content that can be displayed: max and min temperatures, weather description, how it really feels like, rain, snow, wind, clouds, sunrise, sunset, pressure, sea level, and ground level. The web application is dynamically built based on the data from the response.",0,0,0,location+request+weather,GitHub
145,Weather-Journal-App-Project-Udacity,https://github.com/richbm10/Weather-Journal-App-Project-Udacity.git,"This web application consists in a weather journal for the current weather of a specific location using an ISO country code and ZIP code. The weather information is obtained by requesting it from the Open Weather Map API ( https://openweathermap.org/api ). The basic content that is displayed is the temperature, and the timezone date and hour of the location. Besides, depending on the data from the response of the API, there is other content that can be displayed: max and min temperatures, weather description, how it really feels like, rain, snow, wind, clouds, sunrise, sunset, pressure, sea level, and ground level. The web application is dynamically built based on the data from the response.",0,0,0,location+request+weather,GitHub
146,geocoding-app,https://github.com/raimonlpz/geocoding-app.git,-CLI- app that accepts a certain location as input argument in the command line/terminal and makes api requests to get coordinates of the place (MAPBOX API). Then uses longitude and latitude to get forecast/weather info of the place(DARKSKY API). ,0,0,0,location+request+weather,GitHub
147,Node_Weather_WebApp,https://github.com/DeepCodeWork/Node_Weather_WebApp.git,This is a basic node project. Here i have used Express framework and request module. I've used Geo location services API fro getting Latitude and longitude of a place by it's name and darknet API for getting the weather report. ,0,0,0,location+request+weather,GitHub
148,FEND-05-TravelApp,https://github.com/LanceStasinski/FEND-05-TravelApp.git,"This application is meant to demonstrate the skills learned from Udacity's FEND nanodegree program. These skills include working with: HTML, CSS/SCSS, JavaScript (asynchronous), express servers, external APIs through GET and POST requests, webpack, service workers, and more. The application should take in a data and location from the user and return the weather report for that place and time. ",0,0,0,location+request+weather,GitHub
149,gigboard,https://github.com/benhammondmusic/gigboard.git,"Fullstack marketplace app for short-term gigs, built with MongoDB, Express.js, React and Node (MERN). Model-View-Controller (MVC) design pattern for code readability and separation of concerns, custom API for communication between the frontend and backend via HTTP requests, and consumes a public weather API to display each gig location’s current temp. CRUD functionality restricted per user status; offers users a custom encrypted account registration process or a secure login via Google OAuth.",0,1,0,location+request+weather+crud-application+react+heroku-deployment+express+mongodb,GitHub
150,Electron-Weather-Application,https://github.com/murphypaul1985/Electron-Weather-Application.git,"Javascript Project - Desktop application with Electron framework using JavaScript, HTML, and CSS. Using a public HTTP API the application will get the users IP address of their computer and send it to https://api.ipify.org in order to retrieve its current location based on latitude and longitude. Then the application uses an API to request current weather details from openweather.org based on the coordinates sent.",0,0,0,location+request+weather,GitHub
151,food-truck-project,https://github.com/thi-m-duong/food-truck-project.git,"This project has 2 parts: Part 1 -- Creating a notification app for a food truck to send daily emails to their customer mailing list with its location, weather details, and menu specials; using Python, JSON parsing, HTTP/API requests, Gmail SMTP. Part 2 -- Built an ordering app interface that allows the cashier or the customers themselves to enter the order, then the app will collect the order and calculating the order totals.",0,1,0,location+request+weather,GitHub
152,Weather-API-Dashboard-with-Python-and-Flask,https://github.com/danielmnunes/Weather-API-Dashboard-with-Python-and-Flask.git,"This project is a beginner-friendly web application focused on building a Flask App that will take a Zip Code provided by the user and get the Weather of that location. We'll learn how to use the Requests module in Python, parse the JSON returned in the Weather API and render the dashboard and results in Flask. This project is particularly special to me because it's the first project I ever built when learning how to code. Let's dive right in!",0,0,0,location+request+weather,GitHub
153,Power_Prediction_in_Wind_Farms,https://github.com/sreyans01/Power_Prediction_in_Wind_Farms.git,"A prdeiction model with an end user android application to detect the Power Grid for maximum Power Unit Prediction in Wind Farms. The app tracks the exact location coordinates of the user and fetches the weayher data accordingly. Using the interpolation techniques, we improve the weather data errors(if any). In the next step, the app sends a request to the NODE_RED server and gets the access token from the server. Once, we receive the access token, we finally send another request to the API to get our final prediction data. In the end, we plot a graph of Power VS Timings and display it to the user, and also give the user a complete 72 hour forecast of the Wind-Farm-Power-Prediction.",0,0,0,location+request+weather,GitHub
154,GitHub-Test,https://github.com/Green077/GitHub-Test.git,"It's a project combined with hardware and software, the goal is to make a smart watch based on esp8266 chip. The smart watch has so many features such as time display, alarm, brightness adjustment, text scrolling, weather display, voice control and gesture recognition:. The first five features time display, alarm alert, brightness adjustment and text scrolling are based on the local programming. The basic idea for these is to check the document for esp8266, getting to know how to set up the circuit, how to get the real time, how to control the OLED screen, bus, light sensors etc. The last three features mainly depends on the cloud coding, and are all based on the Client/server architecture. For Weather Display, esp8266 severed as a client. A connection was built by Google Geolocation API between the smart watch(client) and Google Weather Service Server(server). Send the JSON string including location information to the server and get the weather information back.  For Voice Control, esp8266 was configured as a server by ngrok and an Android application was used as the client. This app aims to transfer voice signal into text commands by Google Speech API. Connected the app(client) to the smart watch(server) by HTTP request, and used translated commands to control the smart watch. For gesture recognition, esp8266 was client and server was the EC2 Linux instance set up in AWS. In order to teach the smart watch to identify gestures, both the training and predicting process needs to be done. Mongodb is used to keep the large amount of data from accelerometer training. SVM model is selected to do the training, the data for the same gesture was labeled. After training, if someone is holding the smart watch and moving it in some preset gestures, the smart watch could map these data from the accelerometer into a specific gesture. The final accuracy is 98%.",0,0,0,location+request+weather,GitHub
155,Angular-Directive-Project,https://github.com/sn0112358/Angular-Directive-Project.git,"Angular-Directive-Project Directives range from very basic to extremely complex. This project will build up to some somewhat difficult directives. Keep in mind that the format we're learning for directives is the same format used to build some extremely complex things in angular. Using directives often and well is one way to show you're a talented developer.  Starting Out  We've included only a few things for you to begin with. index.html, app.js, styles.css. At this point the best way to get more comfortable with angular is to initialize an app without relying heavily on boilerplate code (reusable code that starts out your projects for you).  You'll notice that in the index.html we've included the angular-route CDN. Yes, we'll be using angular's router here. Put an ng-view into your index.html.  In your app.js set up a config and set up our first route for when a user is at the '/home' url. If you're having trouble remembering how to set up the router go look at how you set up the router on the previous project. One way these projects will be beneficial to you is allowing you to look back at something *you** did and seeing how you got that something to work.* You may also want add an otherwise that defaults to /home. Create a controller and a template file for this route in your app folder. Don't forget to include the controller as a script in your index.html Check that everything is hooked up correctly. Try adding a div with some text in your home template just to make sure it's showing up. Once you've got that going you're ready to start on some directives. Now let's make our directive. We'll start with a simple one that we can use to display information passed to it.  Step 1. Start your directive  Woot. When you're initializing your directive just remember that it works very similarly to how you start up a controller or a service. It can also be very helpful to think of your directive as a route.  Create your directive. You'll use the directive method on your angular module. It takes two arguments, the name string and the callback function, which will return the object that represents your directive. When naming your directive give it a name with two words; dirDisplay would be nice, but anything works. Just remember it's best practice to give a directive a camel case name so that it's clear in your html what it is. Also we're going to need a template html for our directive. We could do it inline, but let's make another file instead. Just name it something that makes sense for the name of your directive and put it in the same directory as your directive file. For your template just make a <div> and inside a <h1> tag that says User. Now in your home route html add in your directive. It will look like this if you named it dirDisplay: <dir-display></dir-display> Start up your app and go to the home route. Check and make sure you see User where your directive was placed. If you're not seeing it at this point it could mean a few things. Here's some more common issues. You didn't link your directive in your index as a script. Your name for your directive doesn't match the name in your html. Remember camel case becomes snake case so myDirective becomes <my-directive></my-directive>. You're file path to your html template is wrong. You have to think of file paths in angular as relative to the index. Here's some code to see just for this part, and just for the directive's js file.  var app = angular.module('directivePractice'); app.directive('dirDisplay', function(){   return {     templateUrl: 'app/directives/dirDisplay.html'   }; }); What we're returning is the directive object. You won't see anymore code in this tutorial so it's important you get things working right and refer back to what you've already done to advance from now on.  Step 2. Advancing directives  Your directive should be loaded up now, but it's not really doing much. Let's make it better.  In your home controller. Make a variable on your $scope called user. Set it's value to {   name: ""Geoff McMammy"",   age: 43,   email: ""geofdude@gmail.com"" } Now inside your directive's html specifically inside the <h3> tags display our new user's name. Then inside maybe some <h4> tags display his email and age. This is going to work exactly the same as if it was just inside your home controller. Reload the page and make sure it works. This is still very cosmetic and really not all that useful. It needs functionality.  Add into your directive's object the link property. The link property's value is a function definition that takes (generally) three parameters. scope, element, and attributes. Unlike in other places with angular injection these parameter names don't carry meaning. The first parameter will always represent your $scope for that directive, the second will always be the element that wraps your whole directive, and the third will always be an object containing all the properties and values of the attributes on your directive in the dom. Try the following to get a feel for all three.  Add two attributes to your directive in your html. Like this - <dir-display test=""myTest"" my-check=""checkItOut""></dir-display> Now in the link property you've added console.log the three parameters in the function. You'll see an object for scope that should look identical to the $scope of your html function. For element you'll see an object the represents the DOM wrapper for your directive. For attributes you'll see an object that will look like this:  {   test: ""myTest"",   myCheck: ""checkItOut"" } An important thing to notice is how it has again converted snake case to camel case for you. my-check became myCheck. Don't forget this. You'll run into this issue one day. It counts for both attributes and directive names.  To feel some of what the link function could do let's try this.  Add a ng-show to both the email and age wrappers. This should be familiar to you. Now inside your link function add a click event listener to your element property. It's going to look just like jQuery. element.on('click', function(){  }) Inside the click listener's callback add a toggle for the ng-show property you passed in. Along with a console.log to make sure things are connecting when you click. Try it out. Don't call for a mentor when it doesn't work. Let's talk about that first. You should see the console.log firing, but why isn't it toggling. This is going to be a common problem when working with the link function and event listeners. What we have here is an angular digest problem. The value is changing on the scope object, but the change isn't being reflected by our DOM. That's because angular isn't aware of the change yet. Anytime we cause an event to happen using something like jQuery or even angular's jQLite we need to let angular know that we've made a change.  Add this line of code in place of your console.log, scope.$apply(). Now try it out. It should be working now, so if you're still having issues it's time to debug. What we've done is forced angular to run it's digest cycle. This is where angular checks the scope object for changes and then applies those to the DOM. This is another good lesson to learn for later. You'll most likely hit this when making changes to your element using event listeners.  Step 3. Directive's re-usability.  Now our directive has some extremely basic functionality. One of a directive's greatest advantages though is its ability to be placed anywhere and still be functional. Let's say instead we had a list of users instead of just one.  Change the $scope property in your home controller to be users and give it this array as its value: [  {    name: ""Geoff McMammy"",    age: 43,    email: ""geofdude@gmail.com"",    city: ""Provo""  },  {    name: ""Frederick Deeder"",    age: 26,    email: ""fredeed@gmail.com"",    city: ""Austin""  },  {    name: ""Spencer Rentz"",    age: 35,    email: ""spencerrentz@gmail.com"",    city: ""Sacramento""  },  {    name: ""Geddup Ngo"",    age: 43,    email: ""geddupngo@gmail.com"",    city: ""Orlando""  },  {    name: ""Donst Opbie Leevin"",    age: 67,    email: ""gernee@gmail.com"",    city: ""Phoenix""  } ] Now in your home HTML add a ng-repeat to the directive call. Tell it to repeat for each user in users. Reload your page. It's working! But why? How does each directive instance know what information to display?  In the link function console.log the scope parameter. Make sure it's outside of your click listener. You'll see five print outs in your console. Open up any one of them and look to the bottom. Open up the user property. It's exactly what we would want! But again why would that be the case? Don't get too caught up in this next bit if it's too hard to understand, but the ng-repeat is essentially making new tiny scope objects for each individual user in our users array. Now each of our directives is still getting a user property on the scope object just like the directive wanted in the beginning. Woot.  Step 4. Ramp it up with Isolate Scope.  Directives can do so much more. So let's make that happen. That means we should make.... a new directive!!! This directive's purpose will be to display a selected User and the weather in his/her/its location. Link it up just like the last one.  Create a js file for our directive and name it dirWeather. Make an html file named dirWeather.html. Link it up in your index.html and add the template to your new directive object. In your directive's template give it an <h3> tag that says Weather just so we can know it's working. Above your ng-repeat on dirDisplay add your new dirWeather directive. If it's not working check the instructions above as to some common reasons why before asking a mentor for help. If you're seeing the Weather text on your page then we're ready to try out the dreaded Isolate Scope. The isolate scope object is one of the stranger API's in angular. I'm sorry but it is. Just refer to this for now.  scope: {  string: '@',  link: '=',  func: '&' } The properties on the scope object represent the attributes on the directive in the html. Our example scope object here would look something like this in the html. <example-directive string=""a string"" link=""user"" func=""updateUser()""></example-directive> The hard part here is the @, =, and &. They each have very important and distinct meanings.  @ says take in my attribute value as a string. = says take in my attribute value as a two-way bound variable from the parent scope. & says take in my attribute value as a reference to a function on the parent scope. It's also critical to point out that once you add a scope object you have no isolated your directive's scope. Meaning, aside from the values passed in through attributes, this directive has no connection to the $scope of its parent.  That being said let's isolate our directive's scope. :worried:  Add the scope property to your dirWeather. Give it the value of an object with a property of currentUser whose value is '='. Remember in your html this will look like current-user. This is the third time I've said so don't expect it again. This means that whatever comes into the currentUser attribute is going to be a value of the parent's scope object.  For now test this out by passing in users[0]. Find a way to show that users information inside your dirWeather's html. Remember inside your directive now the user is represented by currentUser. Step 5. &? &!?  The '=' value on your scope object has created a two-way binding between users[0] and currentUser. Now let's try out the '&'.  On your home controller add a function called getWeather. It takes one parameter called city. This function will make a call to a service so we'll need to create that. Make a weather service. Name it something cool and creative like weatherService. Inside the weather service make a function called getWeather that also takes one parameter, city. Make an $http get to this url - 'http://api.openweathermap.org/data/2.5/weather?q=' After the q= add on the city parameter. If you want you can test this out in postman. See what kind of data you get back. If it's the weather of that city then... you win! Use $q to return a promise that only resolves with the data you want. Temperature (preferably not in Kelvin) and the weather description. Use console.log on the data coming from the $http request to get to what you want. You'll need to add both on an object that you resolve your new promise with. On your home controller have it return the result of invoking the get getWeather function on the service. You should be returning a promise. Now in your home route's HTML pass in the getWeather function to the dirWeather directive through an attribute called weather-call. Add the attribute to your isolate scope object. That was a lot of linking, but let's walk through it. Your controller has a function linked to the service, which is in turn linked to your directive. So if you run the weatherCall function in your directive it will go through your controller to your service and then back.  Now things get a little bit tricky. Angular's way of passing along arguments through a directive to your controller are tricky, but once you understand how to do it, it's not hard. I'm going to give an example here of how it works.  <my-directive pass-func=""callFunc(data)""></my-directive> Here's how it would look in your HTML. But where's the data supposed to be coming from? It seems that you'd rather be able to pass in data from your directive. Well you still can, you just have to essentially tell angular what do use as an argument to replace data when it calls that function in your controller. The actualy function call inside the directive will look like this.  $scope.passFunc({data: wantedData}) So what you'll do is pass in an object where the property name is what the argument is named in the HTML where you call the directive. That might sound confusing, but just look at the two code blocks above for a pattern. Note that pass-func becomes $scope.passFunc and data is being replaced with wantedData with the {data: wantedData} object. In our directive we want to replace city in the attribute call, for something else inside the directive. You'll follow the same pattern as above.  For now let's get things set up for that function call.  Add to the dirWeather directive object a property called controller. It's value will be a function. Yes, this is a controller specifically for your one directive. It works the same as any other controller, except you don't give it a name. It's $scope object will only be accessible within an instance of your directive. Don't forget to inject $scope in the function.  Inside your controller function run the weatherCall function with the city property from the currentUser on your $scope. Here's where you need to make sure you've passed in a city argument in the attribute function call, and then replace that with your currentUser's city using an object with a city property. The function call should return a promise, so call .then afterward and add the data onto your $scope to display both the weather and temperature of the currentUser's city. The properties can be named whatever makes sense to you.  You may also want to find a way to get rid of all the decimal places on your temperature. Now you should have everything hooked up so it shows Geoff's data and the weather data for Provo. But is that good enough?  Step 6. Ramping up our ramp up.  Now let's change this so it shows the weather data for whichever user we select. We're going to need to use '&' again.  Make a function on the home controller that takes in a parameter and sets a property on the $scope to be that parameter. Maybe you see where this is going.  We want to get this function into our dirDisplay controller. But in order to do that we need to isolate dirDisplay's scope. This also means we need to pass in each individual user through the scope object as well.  To make it easier on ourselves, let's pass the current user from our ng-repeat into our directive through a user attribute. This way we can leave our two-way bindings as they are. Also pass our new function that sets our current user from our home controller into our directive through a setUser attribute.  You'll need to add an argument in there again. Go with user. Your scope object in dirDisplay should have two properties. setUser with the value of '&' and user with the value of '='. As before we're going to need to do some tricky stuff to get our argument back to our controller.  Call the setUser function inside our click event listener and pass in an object the sets our user argument to be the user on our directive's scope object. If you've forgotten this part go back up and take a look at how you did it before or the example in this README.  Whatever user you click on now should show up in the dirWeather directive as the current user. But we're missing one thing, we want to be able to see the weather for that user too. We'll have to do one more thing that will seem a little bit tricky at first, but it's good to learn if you don't know it already since it's actually used quite frequently.  We need to step up a change listener on our currentUser in the dirWeather directive. We'll use angular's $watch functionality. $watch is a method on your $scope that will watch for changes in a variable you give it. It works in two ways.  $scope.$watch('property', function(value){  console.log(""When $scope.property changes its new value is: "", value) }); And  $scope.$watch(function(){  return myVar }, function(value){  console.log(""When myVar changes its new value is: "", value); }); Remove the immediate function call that we have in there now. Maybe just comment it out for now because we'll use it in a bit. Now call the $watch method on your scope and have it watch currentUser. Either way of using $watch is fine. Have its callback run the $scope.weatherCall function just like you had it before.  One thing to note is that $scope.$watch will always run once to begin with. Since that's what we want here it's great, but just be aware of that.  If you've reached this point congratulate yourself. You've messed with some serious stuff today, namely directives. There are still a lot of things about directives that we can't possibly cover in a single project. If you like what we've done so far then you're in a good place to keep going. A developer who understands directives well can build a really clean looking code base. Just look at your home.html. It could have just two lines in it. If you're feeling good move on now to Step 7.  Step 7. Finishing touches  Try to work out these problems on your own.  There should be a way to let the user know that the weather data is loading. Something that appears while our $http request is retrieving our data. The $http request shouldn't fire on both opening and closing a user's information. A color change for the currently active user would be nicer than showing that user's info inside the dirWeather modal. Or at least less redundant. Whatever else you want. We still haven't explored transclusion and ng-transclude so give that a try if you're feeling adventurous. Just know that it's a way for deciding where to put the HTML child elements of a directive. It's cool stuff that can involve some criss-crossing of scopes.",0,15,0,location+request+weather,GitHub
